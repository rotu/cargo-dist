<?xml version="1.0" encoding="utf-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>cargo-dist Changelog</title><link>http://127.0.0.1:7979/cargo-dist/changelog</link><description>Changelog information for cargo-dist</description><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><atom:link href="http://127.0.0.1:7979/cargo-dist/changelog.rss" rel="self"/><item><title>Version 0.6.0-prerelease.1</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.6.0-prerelease.1</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.6.0-prerelease.1</guid><content:encoded><![CDATA[<p>Nothing Yet!</p>
]]></content:encoded></item><item><title>Version 0.5.0 (2023-11-27)</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0</guid><content:encoded><![CDATA[<p>This release was probably going to be several releases, but everything got finished at the same time, so here's a Mega Release!</p>
<p>The headline features are:</p>
<ul>
<li>New Support For Axo Releases, As An Alternative To Github Releases (Launching Soon™)</li>
<li>New Support For Generic Build Steps, In Any Language (Experimental)</li>
<li>Significantly Improved MSI Installer Support</li>
</ul>
<h2>Features</h2>
<h3>Axo Releases</h3>
<p>Axo Releases users can now enable builtin cargo-dist support by setting</p>
<p><code>hosting = ["axodotdev"]</code></p>
<p>in their <code>[workspace.metadata.dist]</code>.</p>
<p>To sign up for the Axo Releases closed beta, go to <a href="https://dash.axo.dev/" rel="noopener noreferrer">https://dash.axo.dev/</a></p>
<p>You can ask for more details by <a href="https://discord.gg/ECnWuUUXQk" rel="noopener noreferrer">joining our discord</a> or sending a message to <code>hello@axo.dev</code>!</p>
<p>Axo Releases has a more robust pipelined model for creating and hosting a release, which more
closely matches the actual design of cargo-dist. But since we'd only ever supported Github Releases,
some significant internal reckoning was required.</p>
<p>This reckoning primarily appears in the existence of the new "cargo dist host" subcommand, which
was created to make "side-effectful networking" explicit, instead of riddling several random commands
with various --dry-run flags.</p>
<p><code>host</code> takes several --steps:</p>
<ul>
<li>create: ask Axo Releases to create hosting for the Apps we want to publish</li>
<li>upload: upload built Artifacts to the hosting that <code>create</code> made</li>
<li>release: create Releases for the hosted artifacts, making perma-urls like /v1.0.0/ live</li>
<li>announce: announce all the Releases, wiring them into "list all releases" and "latest release" endpoints</li>
<li>check: equivalent to <code>create</code> but just checks that authentication is properly setup, without side-effects</li>
</ul>
<p>The distinction between upload, release, and announce in particular lets us provide a more
reliable/transactional release process -- we can make the hosting live, publish to package managers,
and <em>then</em> update URLs like /latest/ once everything works, instead of racily doing it all
at once and having to frantically hack things back to normal when something weird happens.
It should also make it possible for us to provide features like Release/PR Previews.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#hosting" rel="noopener noreferrer">hosting config</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/546" rel="noopener noreferrer">preparatory refactor</a></li>
<li>@gankra <a href="https://github.com/axodotdev/gazenot" rel="noopener noreferrer">create gazenot client library</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/567" rel="noopener noreferrer">break tag parsing into "axotag" crate</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/586" rel="noopener noreferrer">properly set announcement body for abyss</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/600" rel="noopener noreferrer">add a comment about Axo Releases beta</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/596" rel="noopener noreferrer">cleanup github releases / ci contents</a></li>
</ul>
</li>
</ul>
<h3>Generic Builds</h3>
<p>0.5.0 contains experimental support for building non-cargo-based projects. These can be in any language, and follow any repository layout, so long as they're accompanied by a cargo-dist manifest file that provides information on how to build and install it. For more information, consult the documentation.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/generic-builds.html" rel="noopener noreferrer">guide</a></li>
<li><a href="https://github.com/axodotdev/axolotlsay-js" rel="noopener noreferrer">example npm project</a></li>
<li><a href="https://github.com/axodotdev/cargo-dist-c-example" rel="noopener noreferrer">example C project</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/axoproject/pull/45" rel="noopener noreferrer">add generic project type</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/549" rel="noopener noreferrer">handle missing PackageId</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/553" rel="noopener noreferrer">implement generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/569" rel="noopener noreferrer">rebase fixup</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/570" rel="noopener noreferrer">print stdout from generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/573" rel="noopener noreferrer">fix --artifacts=global with generic builds</a></li>
</ul>
</li>
</ul>
<h3>MSI</h3>
<p>We've contributed several upstream improvements to cargo-wix, the tool we use to build MSIs, and integrated
that functionality back into cargo-dist.</p>
<p>Where previously you needed to use cargo-wix CLI flags to set various images in your installers,
they are now exposed in <code>[package.metadata.wix]</code> as well as <code>banner</code>, <code>dialog</code>, and <code>product-icon</code>.</p>
<p>There are now also <code>eula</code> and <code>license</code> configs on <code>[package.metadata.wix]</code> that allow you to specify
where to source the eula/license from, and also allow you to explicitly disable auto-eula/auto-license
functionality with <code>eula = false</code> and <code>license = false</code>. <code>cargo dist init</code> will by default set those
to false if it sees they aren't defined in <code>[package.metadata.wix]</code> yet, making things more well-behaved
by default. To restore the old auto-eula behaviour, set them to <code>true</code>.</p>
<p>In addition, significant refactoring was done to the eula/license backend of cargo-wix so that cargo-dist
can properly understand when those files need to be auto-generated. Previously auto-generated licenses/eulas
would just produce broken templates, because cargo-dist wouldn't know about them and get confused.</p>
<ul>
<li>docs
<ul>
<li><a href="https://volks73.github.io/cargo-wix/cargo_wix/#configuration" rel="noopener noreferrer">cargo-wix docs</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/installers/msi.html" rel="noopener noreferrer">cargo-dist msi docs</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/247" rel="noopener noreferrer">refactor eulas and add new config</a></li>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/250" rel="noopener noreferrer">add config for setting installer images</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/503" rel="noopener noreferrer">use new cargo-wix features</a></li>
</ul>
</li>
</ul>
<h3>Source Tarballs</h3>
<p>cargo-dist will now generate its own source tarballs, and upload them to your release, named "source.tar.gz". The source tarballs that github provides are actually generated on demand with unspecified settings, so to ensure both Axo Releases and Github Releases have access to the same results, we need cargo-dist to generate the source tarball itself. We use the same mechanism as Github (asking git itself to generate them), but we can't bitwise-identically reproduce their (unspecified, technically-not-guaranteed) behaviour.</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/604" rel="noopener noreferrer">impl</a></li>
</ul>
<h2>Maintenance/Fixes</h2>
<ul>
<li>@rukai <a href="https://github.com/axodotdev/cargo-dist/pull/578" rel="noopener noreferrer">Remove rust-toolchain-version from the workspaces setup guide</a></li>
<li>@jwodder <a href="https://github.com/axodotdev/cargo-dist/pull/557" rel="noopener noreferrer">Give "upload-local-artifacts" jobs friendlier display names</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.5.0-prerelease.12</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.12</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.12</guid><content:encoded><![CDATA[<p>This release was probably going to be several releases, but everything got finished at the same time, so here's a Mega Release!</p>
<p>The headline features are:</p>
<ul>
<li>New Support For Axo Releases, As An Alternative To Github Releases (Launching Soon™)</li>
<li>New Support For Generic Build Steps, In Any Language (Experimental)</li>
<li>Significantly Improved MSI Installer Support</li>
</ul>
<h2>Features</h2>
<h3>Axo Releases</h3>
<p>Axo Releases users can now enable builtin cargo-dist support by setting</p>
<p><code>hosting = ["axodotdev"]</code></p>
<p>in their <code>[workspace.metadata.dist]</code>.</p>
<p>To sign up for the Axo Releases closed beta, go to <a href="https://dash.axo.dev/" rel="noopener noreferrer">https://dash.axo.dev/</a></p>
<p>You can ask for more details by <a href="https://discord.gg/ECnWuUUXQk" rel="noopener noreferrer">joining our discord</a> or sending a message to <code>hello@axo.dev</code>!</p>
<p>Axo Releases has a more robust pipelined model for creating and hosting a release, which more
closely matches the actual design of cargo-dist. But since we'd only ever supported Github Releases,
some significant internal reckoning was required.</p>
<p>This reckoning primarily appears in the existence of the new "cargo dist host" subcommand, which
was created to make "side-effectful networking" explicit, instead of riddling several random commands
with various --dry-run flags.</p>
<p><code>host</code> takes several --steps:</p>
<ul>
<li>create: ask Axo Releases to create hosting for the Apps we want to publish</li>
<li>upload: upload built Artifacts to the hosting that <code>create</code> made</li>
<li>release: create Releases for the hosted artifacts, making perma-urls like /v1.0.0/ live</li>
<li>announce: announce all the Releases, wiring them into "list all releases" and "latest release" endpoints</li>
<li>check: equivalent to <code>create</code> but just checks that authentication is properly setup, without side-effects</li>
</ul>
<p>The distinction between upload, release, and announce in particular lets us provide a more
reliable/transactional release process -- we can make the hosting live, publish to package managers,
and <em>then</em> update URLs like /latest/ once everything works, instead of racily doing it all
at once and having to frantically hack things back to normal when something weird happens.
It should also make it possible for us to provide features like Release/PR Previews.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#hosting" rel="noopener noreferrer">hosting config</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/546" rel="noopener noreferrer">preparatory refactor</a></li>
<li>@gankra <a href="https://github.com/axodotdev/gazenot" rel="noopener noreferrer">create gazenot client library</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/567" rel="noopener noreferrer">break tag parsing into "axotag" crate</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/586" rel="noopener noreferrer">properly set announcement body for abyss</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/600" rel="noopener noreferrer">add a comment about Axo Releases beta</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/596" rel="noopener noreferrer">cleanup github releases / ci contents</a></li>
</ul>
</li>
</ul>
<h3>Generic Builds</h3>
<p>0.5.0 contains experimental support for building non-cargo-based projects. These can be in any language, and follow any repository layout, so long as they're accompanied by a cargo-dist manifest file that provides information on how to build and install it. For more information, consult the documentation.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/generic-builds.html" rel="noopener noreferrer">guide</a></li>
<li><a href="https://github.com/axodotdev/axolotlsay-js" rel="noopener noreferrer">example npm project</a></li>
<li><a href="https://github.com/axodotdev/cargo-dist-c-example" rel="noopener noreferrer">example C project</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/axoproject/pull/45" rel="noopener noreferrer">add generic project type</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/549" rel="noopener noreferrer">handle missing PackageId</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/553" rel="noopener noreferrer">implement generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/569" rel="noopener noreferrer">rebase fixup</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/570" rel="noopener noreferrer">print stdout from generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/573" rel="noopener noreferrer">fix --artifacts=global with generic builds</a></li>
</ul>
</li>
</ul>
<h3>MSI</h3>
<p>We've contributed several upstream improvements to cargo-wix, the tool we use to build MSIs, and integrated
that functionality back into cargo-dist.</p>
<p>Where previously you needed to use cargo-wix CLI flags to set various images in your installers,
they are now exposed in <code>[package.metadata.wix]</code> as well as <code>banner</code>, <code>dialog</code>, and <code>product-icon</code>.</p>
<p>There are now also <code>eula</code> and <code>license</code> configs on <code>[package.metadata.wix]</code> that allow you to specify
where to source the eula/license from, and also allow you to explicitly disable auto-eula/auto-license
functionality with <code>eula = false</code> and <code>license = false</code>. <code>cargo dist init</code> will by default set those
to false if it sees they aren't defined in <code>[package.metadata.wix]</code> yet, making things more well-behaved
by default. To restore the old auto-eula behaviour, set them to <code>true</code>.</p>
<p>In addition, significant refactoring was done to the eula/license backend of cargo-wix so that cargo-dist
can properly understand when those files need to be auto-generated. Previously auto-generated licenses/eulas
would just produce broken templates, because cargo-dist wouldn't know about them and get confused.</p>
<ul>
<li>docs
<ul>
<li><a href="https://volks73.github.io/cargo-wix/cargo_wix/#configuration" rel="noopener noreferrer">cargo-wix docs</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/installers/msi.html" rel="noopener noreferrer">cargo-dist msi docs</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/247" rel="noopener noreferrer">refactor eulas and add new config</a></li>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/250" rel="noopener noreferrer">add config for setting installer images</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/503" rel="noopener noreferrer">use new cargo-wix features</a></li>
</ul>
</li>
</ul>
<h3>Source Tarballs</h3>
<p>cargo-dist will now generate its own source tarballs, and upload them to your release, named "source.tar.gz". The source tarballs that github provides are actually generated on demand with unspecified settings, so to ensure both Axo Releases and Github Releases have access to the same results, we need cargo-dist to generate the source tarball itself. We use the same mechanism as Github (asking git itself to generate them), but we can't bitwise-identically reproduce their (unspecified, technically-not-guaranteed) behaviour.</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/604" rel="noopener noreferrer">impl</a></li>
</ul>
<h2>Maintenance/Fixes</h2>
<ul>
<li>@rukai <a href="https://github.com/axodotdev/cargo-dist/pull/578" rel="noopener noreferrer">Remove rust-toolchain-version from the workspaces setup guide</a></li>
<li>@jwodder <a href="https://github.com/axodotdev/cargo-dist/pull/557" rel="noopener noreferrer">Give "upload-local-artifacts" jobs friendlier display names</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.5.0-prerelease.11</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.11</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.11</guid><content:encoded><![CDATA[<p>This release was probably going to be several releases, but everything got finished at the same time, so here's a Mega Release!</p>
<p>The headline features are:</p>
<ul>
<li>New Support For Axo Releases, As An Alternative To Github Releases (Launching Soon™)</li>
<li>New Support For Generic Build Steps, In Any Language (Experimental)</li>
<li>Significantly Improved MSI Installer Support</li>
</ul>
<h2>Features</h2>
<h3>Axo Releases</h3>
<p>Axo Releases users can now enable builtin cargo-dist support by setting</p>
<p><code>hosting = ["axodotdev"]</code></p>
<p>in their <code>[workspace.metadata.dist]</code>.</p>
<p>To sign up for the Axo Releases closed beta, go to <a href="https://dash.axo.dev/" rel="noopener noreferrer">https://dash.axo.dev/</a></p>
<p>You can ask for more details by <a href="https://discord.gg/ECnWuUUXQk" rel="noopener noreferrer">joining our discord</a> or sending a message to <code>hello@axo.dev</code>!</p>
<p>Axo Releases has a more robust pipelined model for creating and hosting a release, which more
closely matches the actual design of cargo-dist. But since we'd only ever supported Github Releases,
some significant internal reckoning was required.</p>
<p>This reckoning primarily appears in the existence of the new "cargo dist host" subcommand, which
was created to make "side-effectful networking" explicit, instead of riddling several random commands
with various --dry-run flags.</p>
<p><code>host</code> takes several --steps:</p>
<ul>
<li>create: ask Axo Releases to create hosting for the Apps we want to publish</li>
<li>upload: upload built Artifacts to the hosting that <code>create</code> made</li>
<li>release: create Releases for the hosted artifacts, making perma-urls like /v1.0.0/ live</li>
<li>announce: announce all the Releases, wiring them into "list all releases" and "latest release" endpoints</li>
<li>check: equivalent to <code>create</code> but just checks that authentication is properly setup, without side-effects</li>
</ul>
<p>The distinction between upload, release, and announce in particular lets us provide a more
reliable/transactional release process -- we can make the hosting live, publish to package managers,
and <em>then</em> update URLs like /latest/ once everything works, instead of racily doing it all
at once and having to frantically hack things back to normal when something weird happens.
It should also make it possible for us to provide features like Release/PR Previews.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#hosting" rel="noopener noreferrer">hosting config</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/546" rel="noopener noreferrer">preparatory refactor</a></li>
<li>@gankra <a href="https://github.com/axodotdev/gazenot" rel="noopener noreferrer">create gazenot client library</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/567" rel="noopener noreferrer">break tag parsing into "axotag" crate</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/586" rel="noopener noreferrer">properly set announcement body for abyss</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/600" rel="noopener noreferrer">add a comment about Axo Releases beta</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/596" rel="noopener noreferrer">cleanup github releases / ci contents</a></li>
</ul>
</li>
</ul>
<h3>Generic Builds</h3>
<p>0.5.0 contains experimental support for building non-cargo-based projects. These can be in any language, and follow any repository layout, so long as they're accompanied by a cargo-dist manifest file that provides information on how to build and install it. For more information, consult the documentation.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/generic-builds.html" rel="noopener noreferrer">guide</a></li>
<li><a href="https://github.com/axodotdev/axolotlsay-js" rel="noopener noreferrer">example npm project</a></li>
<li><a href="https://github.com/axodotdev/cargo-dist-c-example" rel="noopener noreferrer">example C project</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/axoproject/pull/45" rel="noopener noreferrer">add generic project type</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/549" rel="noopener noreferrer">handle missing PackageId</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/553" rel="noopener noreferrer">implement generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/569" rel="noopener noreferrer">rebase fixup</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/570" rel="noopener noreferrer">print stdout from generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/573" rel="noopener noreferrer">fix --artifacts=global with generic builds</a></li>
</ul>
</li>
</ul>
<h3>MSI</h3>
<p>We've contributed several upstream improvements to cargo-wix, the tool we use to build MSIs, and integrated
that functionality back into cargo-dist.</p>
<p>Where previously you needed to use cargo-wix CLI flags to set various images in your installers,
they are now exposed in <code>[package.metadata.wix]</code> as well as <code>banner</code>, <code>dialog</code>, and <code>product-icon</code>.</p>
<p>There are now also <code>eula</code> and <code>license</code> configs on <code>[package.metadata.wix]</code> that allow you to specify
where to source the eula/license from, and also allow you to explicitly disable auto-eula/auto-license
functionality with <code>eula = false</code> and <code>license = false</code>. <code>cargo dist init</code> will by default set those
to false if it sees they aren't defined in <code>[package.metadata.wix]</code> yet, making things more well-behaved
by default. To restore the old auto-eula behaviour, set them to <code>true</code>.</p>
<p>In addition, significant refactoring was done to the eula/license backend of cargo-wix so that cargo-dist
can properly understand when those files need to be auto-generated. Previously auto-generated licenses/eulas
would just produce broken templates, because cargo-dist wouldn't know about them and get confused.</p>
<ul>
<li>docs
<ul>
<li><a href="https://volks73.github.io/cargo-wix/cargo_wix/#configuration" rel="noopener noreferrer">cargo-wix docs</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/installers/msi.html" rel="noopener noreferrer">cargo-dist msi docs</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/247" rel="noopener noreferrer">refactor eulas and add new config</a></li>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/250" rel="noopener noreferrer">add config for setting installer images</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/503" rel="noopener noreferrer">use new cargo-wix features</a></li>
</ul>
</li>
</ul>
<h3>Source Tarballs</h3>
<p>cargo-dist will now generate its own source tarballs, and upload them to your release, named "source.tar.gz". The source tarballs that github provides are actually generated on demand with unspecified settings, so to ensure both Axo Releases and Github Releases have access to the same results, we need cargo-dist to generate the source tarball itself. We use the same mechanism as Github (asking git itself to generate them), but we can't bitwise-identically reproduce their (unspecified, technically-not-guaranteed) behaviour.</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/604" rel="noopener noreferrer">impl</a></li>
</ul>
<h2>Maintenance/Fixes</h2>
<ul>
<li>@rukai <a href="https://github.com/axodotdev/cargo-dist/pull/578" rel="noopener noreferrer">Remove rust-toolchain-version from the workspaces setup guide</a></li>
<li>@jwodder <a href="https://github.com/axodotdev/cargo-dist/pull/557" rel="noopener noreferrer">Give "upload-local-artifacts" jobs friendlier display names</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.5.0-prerelease.10</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.10</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.10</guid><content:encoded><![CDATA[<p>This release was probably going to be several releases, but everything got finished at the same time, so here's a Mega Release!</p>
<p>The headline features are:</p>
<ul>
<li>New Support For Axo Releases, As An Alternative To Github Releases (Launching Soon™)</li>
<li>New Support For Generic Build Steps, In Any Language (Experimental)</li>
<li>Significantly Improved MSI Installer Support</li>
</ul>
<h2>Features</h2>
<h3>Axo Releases</h3>
<p>Axo Releases users can now enable builtin cargo-dist support by setting</p>
<p><code>hosting = ["axodotdev"]</code></p>
<p>in their <code>[workspace.metadata.dist]</code>.</p>
<p>To sign up for the Axo Releases closed beta, go to <a href="https://dash.axo.dev/" rel="noopener noreferrer">https://dash.axo.dev/</a></p>
<p>You can ask for more details by <a href="https://discord.gg/ECnWuUUXQk" rel="noopener noreferrer">joining our discord</a> or sending a message to <code>hello@axo.dev</code>!</p>
<p>Axo Releases has a more robust pipelined model for creating and hosting a release, which more
closely matches the actual design of cargo-dist. But since we'd only ever supported Github Releases,
some significant internal reckoning was required.</p>
<p>This reckoning primarily appears in the existence of the new "cargo dist host" subcommand, which
was created to make "side-effectful networking" explicit, instead of riddling several random commands
with various --dry-run flags.</p>
<p><code>host</code> takes several --steps:</p>
<ul>
<li>create: ask Axo Releases to create hosting for the Apps we want to publish</li>
<li>upload: upload built Artifacts to the hosting that <code>create</code> made</li>
<li>release: create Releases for the hosted artifacts, making perma-urls like /v1.0.0/ live</li>
<li>announce: announce all the Releases, wiring them into "list all releases" and "latest release" endpoints</li>
<li>check: equivalent to <code>create</code> but just checks that authentication is properly setup, without side-effects</li>
</ul>
<p>The distinction between upload, release, and announce in particular lets us provide a more
reliable/transactional release process -- we can make the hosting live, publish to package managers,
and <em>then</em> update URLs like /latest/ once everything works, instead of racily doing it all
at once and having to frantically hack things back to normal when something weird happens.
It should also make it possible for us to provide features like Release/PR Previews.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#hosting" rel="noopener noreferrer">hosting config</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/546" rel="noopener noreferrer">preparatory refactor</a></li>
<li>@gankra <a href="https://github.com/axodotdev/gazenot" rel="noopener noreferrer">create gazenot client library</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/567" rel="noopener noreferrer">break tag parsing into "axotag" crate</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/586" rel="noopener noreferrer">properly set announcement body for abyss</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/600" rel="noopener noreferrer">add a comment about Axo Releases beta</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/596" rel="noopener noreferrer">cleanup github releases / ci contents</a></li>
</ul>
</li>
</ul>
<h3>Generic Builds</h3>
<p>0.5.0 contains experimental support for building non-cargo-based projects. These can be in any language, and follow any repository layout, so long as they're accompanied by a cargo-dist manifest file that provides information on how to build and install it. For more information, consult the documentation.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/generic-builds.html" rel="noopener noreferrer">guide</a></li>
<li><a href="https://github.com/axodotdev/axolotlsay-js" rel="noopener noreferrer">example npm project</a></li>
<li><a href="https://github.com/axodotdev/cargo-dist-c-example" rel="noopener noreferrer">example C project</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/axoproject/pull/45" rel="noopener noreferrer">add generic project type</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/549" rel="noopener noreferrer">handle missing PackageId</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/553" rel="noopener noreferrer">implement generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/569" rel="noopener noreferrer">rebase fixup</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/570" rel="noopener noreferrer">print stdout from generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/573" rel="noopener noreferrer">fix --artifacts=global with generic builds</a></li>
</ul>
</li>
</ul>
<h3>MSI</h3>
<p>We've contributed several upstream improvements to cargo-wix, the tool we use to build MSIs, and integrated
that functionality back into cargo-dist.</p>
<p>Where previously you needed to use cargo-wix CLI flags to set various images in your installers,
they are now exposed in <code>[package.metadata.wix]</code> as well as <code>banner</code>, <code>dialog</code>, and <code>product-icon</code>.</p>
<p>There are now also <code>eula</code> and <code>license</code> configs on <code>[package.metadata.wix]</code> that allow you to specify
where to source the eula/license from, and also allow you to explicitly disable auto-eula/auto-license
functionality with <code>eula = false</code> and <code>license = false</code>. <code>cargo dist init</code> will by default set those
to false if it sees they aren't defined in <code>[package.metadata.wix]</code> yet, making things more well-behaved
by default. To restore the old auto-eula behaviour, set them to <code>true</code>.</p>
<p>In addition, significant refactoring was done to the eula/license backend of cargo-wix so that cargo-dist
can properly understand when those files need to be auto-generated. Previously auto-generated licenses/eulas
would just produce broken templates, because cargo-dist wouldn't know about them and get confused.</p>
<ul>
<li>docs
<ul>
<li><a href="https://volks73.github.io/cargo-wix/cargo_wix/#configuration" rel="noopener noreferrer">cargo-wix docs</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/installers/msi.html" rel="noopener noreferrer">cargo-dist msi docs</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/247" rel="noopener noreferrer">refactor eulas and add new config</a></li>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/250" rel="noopener noreferrer">add config for setting installer images</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/503" rel="noopener noreferrer">use new cargo-wix features</a></li>
</ul>
</li>
</ul>
<h3>Source Tarballs</h3>
<p>cargo-dist will now generate its own source tarballs, and upload them to your release, named "source.tar.gz". The source tarballs that github provides are actually generated on demand with unspecified settings, so to ensure both Axo Releases and Github Releases have access to the same results, we need cargo-dist to generate the source tarball itself. We use the same mechanism as Github (asking git itself to generate them), but we can't bitwise-identically reproduce their (unspecified, technically-not-guaranteed) behaviour.</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/604" rel="noopener noreferrer">impl</a></li>
</ul>
<h2>Maintenance/Fixes</h2>
<ul>
<li>@rukai <a href="https://github.com/axodotdev/cargo-dist/pull/578" rel="noopener noreferrer">Remove rust-toolchain-version from the workspaces setup guide</a></li>
<li>@jwodder <a href="https://github.com/axodotdev/cargo-dist/pull/557" rel="noopener noreferrer">Give "upload-local-artifacts" jobs friendlier display names</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.5.0-prerelease.9</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.9</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.9</guid><content:encoded><![CDATA[<p>This release was probably going to be several releases, but everything got finished at the same time, so here's a Mega Release!</p>
<p>The headline features are:</p>
<ul>
<li>New Support For Axo Releases, As An Alternative To Github Releases (Launching Soon™)</li>
<li>New Support For Generic Build Steps, In Any Language (Experimental)</li>
<li>Significantly Improved MSI Installer Support</li>
</ul>
<h2>Features</h2>
<h3>Axo Releases</h3>
<p>Axo Releases users can now enable builtin cargo-dist support by setting</p>
<p><code>hosting = ["axodotdev"]</code></p>
<p>in their <code>[workspace.metadata.dist]</code>.</p>
<p>To sign up for the Axo Releases closed beta, go to <a href="https://dash.axo.dev/" rel="noopener noreferrer">https://dash.axo.dev/</a></p>
<p>You can ask for more details by <a href="https://discord.gg/ECnWuUUXQk" rel="noopener noreferrer">joining our discord</a> or sending a message to <code>hello@axo.dev</code>!</p>
<p>Axo Releases has a more robust pipelined model for creating and hosting a release, which more
closely matches the actual design of cargo-dist. But since we'd only ever supported Github Releases,
some significant internal reckoning was required.</p>
<p>This reckoning primarily appears in the existence of the new "cargo dist host" subcommand, which
was created to make "side-effectful networking" explicit, instead of riddling several random commands
with various --dry-run flags.</p>
<p><code>host</code> takes several --steps:</p>
<ul>
<li>create: ask Axo Releases to create hosting for the Apps we want to publish</li>
<li>upload: upload built Artifacts to the hosting that <code>create</code> made</li>
<li>release: create Releases for the hosted artifacts, making perma-urls like /v1.0.0/ live</li>
<li>announce: announce all the Releases, wiring them into "list all releases" and "latest release" endpoints</li>
<li>check: equivalent to <code>create</code> but just checks that authentication is properly setup, without side-effects</li>
</ul>
<p>The distinction between upload, release, and announce in particular lets us provide a more
reliable/transactional release process -- we can make the hosting live, publish to package managers,
and <em>then</em> update URLs like /latest/ once everything works, instead of racily doing it all
at once and having to frantically hack things back to normal when something weird happens.
It should also make it possible for us to provide features like Release/PR Previews.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#hosting" rel="noopener noreferrer">hosting config</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/546" rel="noopener noreferrer">preparatory refactor</a></li>
<li>@gankra <a href="https://github.com/axodotdev/gazenot" rel="noopener noreferrer">create gazenot client library</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/567" rel="noopener noreferrer">break tag parsing into "axotag" crate</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/586" rel="noopener noreferrer">properly set announcement body for abyss</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/600" rel="noopener noreferrer">add a comment about Axo Releases beta</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/596" rel="noopener noreferrer">cleanup github releases / ci contents</a></li>
</ul>
</li>
</ul>
<h3>Generic Builds</h3>
<p>0.5.0 contains experimental support for building non-cargo-based projects. These can be in any language, and follow any repository layout, so long as they're accompanied by a cargo-dist manifest file that provides information on how to build and install it. For more information, consult the documentation.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/generic-builds.html" rel="noopener noreferrer">guide</a></li>
<li><a href="https://github.com/axodotdev/axolotlsay-js" rel="noopener noreferrer">example npm project</a></li>
<li><a href="https://github.com/axodotdev/cargo-dist-c-example" rel="noopener noreferrer">example C project</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/axoproject/pull/45" rel="noopener noreferrer">add generic project type</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/549" rel="noopener noreferrer">handle missing PackageId</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/553" rel="noopener noreferrer">implement generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/569" rel="noopener noreferrer">rebase fixup</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/570" rel="noopener noreferrer">print stdout from generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/573" rel="noopener noreferrer">fix --artifacts=global with generic builds</a></li>
</ul>
</li>
</ul>
<h3>MSI</h3>
<p>We've contributed several upstream improvements to cargo-wix, the tool we use to build MSIs, and integrated
that functionality back into cargo-dist.</p>
<p>Where previously you needed to use cargo-wix CLI flags to set various images in your installers,
they are now exposed in <code>[package.metadata.wix]</code> as well as <code>banner</code>, <code>dialog</code>, and <code>product-icon</code>.</p>
<p>There are now also <code>eula</code> and <code>license</code> configs on <code>[package.metadata.wix]</code> that allow you to specify
where to source the eula/license from, and also allow you to explicitly disable auto-eula/auto-license
functionality with <code>eula = false</code> and <code>license = false</code>. <code>cargo dist init</code> will by default set those
to false if it sees they aren't defined in <code>[package.metadata.wix]</code> yet, making things more well-behaved
by default. To restore the old auto-eula behaviour, set them to <code>true</code>.</p>
<p>In addition, significant refactoring was done to the eula/license backend of cargo-wix so that cargo-dist
can properly understand when those files need to be auto-generated. Previously auto-generated licenses/eulas
would just produce broken templates, because cargo-dist wouldn't know about them and get confused.</p>
<ul>
<li>docs
<ul>
<li><a href="https://volks73.github.io/cargo-wix/cargo_wix/#configuration" rel="noopener noreferrer">cargo-wix docs</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/installers/msi.html" rel="noopener noreferrer">cargo-dist msi docs</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/247" rel="noopener noreferrer">refactor eulas and add new config</a></li>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/250" rel="noopener noreferrer">add config for setting installer images</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/503" rel="noopener noreferrer">use new cargo-wix features</a></li>
</ul>
</li>
</ul>
<h3>Source Tarballs</h3>
<p>cargo-dist will now generate its own source tarballs, and upload them to your release, named "source.tar.gz". The source tarballs that github provides are actually generated on demand with unspecified settings, so to ensure both Axo Releases and Github Releases have access to the same results, we need cargo-dist to generate the source tarball itself. We use the same mechanism as Github (asking git itself to generate them), but we can't bitwise-identically reproduce their (unspecified, technically-not-guaranteed) behaviour.</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/604" rel="noopener noreferrer">impl</a></li>
</ul>
<h2>Maintenance/Fixes</h2>
<ul>
<li>@rukai <a href="https://github.com/axodotdev/cargo-dist/pull/578" rel="noopener noreferrer">Remove rust-toolchain-version from the workspaces setup guide</a></li>
<li>@jwodder <a href="https://github.com/axodotdev/cargo-dist/pull/557" rel="noopener noreferrer">Give "upload-local-artifacts" jobs friendlier display names</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.5.0-prerelease.8</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.8</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.8</guid><content:encoded><![CDATA[<p>This release was probably going to be several releases, but everything got finished at the same time, so here's a Mega Release!</p>
<p>The headline features are:</p>
<ul>
<li>New Support For Axo Releases, As An Alternative To Github Releases (Launching Soon™)</li>
<li>New Support For Generic Build Steps, In Any Language (Experimental)</li>
<li>Significantly Improved MSI Installer Support</li>
</ul>
<h2>Features</h2>
<h3>Axo Releases</h3>
<p>Axo Releases users can now enable builtin cargo-dist support by setting</p>
<p><code>hosting = ["axodotdev"]</code></p>
<p>in their <code>[workspace.metadata.dist]</code>.</p>
<p>To sign up for the Axo Releases closed beta, go to <a href="https://dash.axo.dev/" rel="noopener noreferrer">https://dash.axo.dev/</a></p>
<p>You can ask for more details by <a href="https://discord.gg/ECnWuUUXQk" rel="noopener noreferrer">joining our discord</a> or sending a message to <code>hello@axo.dev</code>!</p>
<p>Axo Releases has a more robust pipelined model for creating and hosting a release, which more
closely matches the actual design of cargo-dist. But since we'd only ever supported Github Releases,
some significant internal reckoning was required.</p>
<p>This reckoning primarily appears in the existence of the new "cargo dist host" subcommand, which
was created to make "side-effectful networking" explicit, instead of riddling several random commands
with various --dry-run flags.</p>
<p><code>host</code> takes several --steps:</p>
<ul>
<li>create: ask Axo Releases to create hosting for the Apps we want to publish</li>
<li>upload: upload built Artifacts to the hosting that <code>create</code> made</li>
<li>release: create Releases for the hosted artifacts, making perma-urls like /v1.0.0/ live</li>
<li>announce: announce all the Releases, wiring them into "list all releases" and "latest release" endpoints</li>
<li>check: equivalent to <code>create</code> but just checks that authentication is properly setup, without side-effects</li>
</ul>
<p>The distinction between upload, release, and announce in particular lets us provide a more
reliable/transactional release process -- we can make the hosting live, publish to package managers,
and <em>then</em> update URLs like /latest/ once everything works, instead of racily doing it all
at once and having to frantically hack things back to normal when something weird happens.
It should also make it possible for us to provide features like Release/PR Previews.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#hosting" rel="noopener noreferrer">hosting config</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/546" rel="noopener noreferrer">preparatory refactor</a></li>
<li>@gankra <a href="https://github.com/axodotdev/gazenot" rel="noopener noreferrer">create gazenot client library</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/567" rel="noopener noreferrer">break tag parsing into "axotag" crate</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/586" rel="noopener noreferrer">properly set announcement body for abyss</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/600" rel="noopener noreferrer">add a comment about Axo Releases beta</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/596" rel="noopener noreferrer">cleanup github releases / ci contents</a></li>
</ul>
</li>
</ul>
<h3>Generic Builds</h3>
<p>0.5.0 contains experimental support for building non-cargo-based projects. These can be in any language, and follow any repository layout, so long as they're accompanied by a cargo-dist manifest file that provides information on how to build and install it. For more information, consult the documentation.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/generic-builds.html" rel="noopener noreferrer">guide</a></li>
<li><a href="https://github.com/axodotdev/axolotlsay-js" rel="noopener noreferrer">example npm project</a></li>
<li><a href="https://github.com/axodotdev/cargo-dist-c-example" rel="noopener noreferrer">example C project</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/axoproject/pull/45" rel="noopener noreferrer">add generic project type</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/549" rel="noopener noreferrer">handle missing PackageId</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/553" rel="noopener noreferrer">implement generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/569" rel="noopener noreferrer">rebase fixup</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/570" rel="noopener noreferrer">print stdout from generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/573" rel="noopener noreferrer">fix --artifacts=global with generic builds</a></li>
</ul>
</li>
</ul>
<h3>MSI</h3>
<p>We've contributed several upstream improvements to cargo-wix, the tool we use to build MSIs, and integrated
that functionality back into cargo-dist.</p>
<p>Where previously you needed to use cargo-wix CLI flags to set various images in your installers,
they are now exposed in <code>[package.metadata.wix]</code> as well as <code>banner</code>, <code>dialog</code>, and <code>product-icon</code>.</p>
<p>There are now also <code>eula</code> and <code>license</code> configs on <code>[package.metadata.wix]</code> that allow you to specify
where to source the eula/license from, and also allow you to explicitly disable auto-eula/auto-license
functionality with <code>eula = false</code> and <code>license = false</code>. <code>cargo dist init</code> will by default set those
to false if it sees they aren't defined in <code>[package.metadata.wix]</code> yet, making things more well-behaved
by default. To restore the old auto-eula behaviour, set them to <code>true</code>.</p>
<p>In addition, significant refactoring was done to the eula/license backend of cargo-wix so that cargo-dist
can properly understand when those files need to be auto-generated. Previously auto-generated licenses/eulas
would just produce broken templates, because cargo-dist wouldn't know about them and get confused.</p>
<ul>
<li>docs
<ul>
<li><a href="https://volks73.github.io/cargo-wix/cargo_wix/#configuration" rel="noopener noreferrer">cargo-wix docs</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/installers/msi.html" rel="noopener noreferrer">cargo-dist msi docs</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/247" rel="noopener noreferrer">refactor eulas and add new config</a></li>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/250" rel="noopener noreferrer">add config for setting installer images</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/503" rel="noopener noreferrer">use new cargo-wix features</a></li>
</ul>
</li>
</ul>
<h3>Source Tarballs</h3>
<p>cargo-dist will now generate its own source tarballs, and upload them to your release, named "source.tar.gz". The source tarballs that github provides are actually generated on demand with unspecified settings, so to ensure both Axo Releases and Github Releases have access to the same results, we need cargo-dist to generate the source tarball itself. We use the same mechanism as Github (asking git itself to generate them), but we can't bitwise-identically reproduce their (unspecified, technically-not-guaranteed) behaviour.</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/604" rel="noopener noreferrer">impl</a></li>
</ul>
<h2>Maintenance/Fixes</h2>
<ul>
<li>@rukai <a href="https://github.com/axodotdev/cargo-dist/pull/578" rel="noopener noreferrer">Remove rust-toolchain-version from the workspaces setup guide</a></li>
<li>@jwodder <a href="https://github.com/axodotdev/cargo-dist/pull/557" rel="noopener noreferrer">Give "upload-local-artifacts" jobs friendlier display names</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.5.0-prerelease.7</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.7</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.7</guid><content:encoded><![CDATA[<p>This release was probably going to be several releases, but everything got finished at the same time, so here's a Mega Release!</p>
<p>The headline features are:</p>
<ul>
<li>New Support For Axo Releases, As An Alternative To Github Releases (Launching Soon™)</li>
<li>New Support For Generic Build Steps, In Any Language (Experimental)</li>
<li>Significantly Improved MSI Installer Support</li>
</ul>
<h2>Features</h2>
<h3>Axo Releases</h3>
<p>Axo Releases users can now enable builtin cargo-dist support by setting</p>
<p><code>hosting = ["axodotdev"]</code></p>
<p>in their <code>[workspace.metadata.dist]</code>.</p>
<p>To sign up for the Axo Releases closed beta, go to <a href="https://dash.axo.dev/" rel="noopener noreferrer">https://dash.axo.dev/</a></p>
<p>You can ask for more details by <a href="https://discord.gg/ECnWuUUXQk" rel="noopener noreferrer">joining our discord</a> or sending a message to <code>hello@axo.dev</code>!</p>
<p>Axo Releases has a more robust pipelined model for creating and hosting a release, which more
closely matches the actual design of cargo-dist. But since we'd only ever supported Github Releases,
some significant internal reckoning was required.</p>
<p>This reckoning primarily appears in the existence of the new "cargo dist host" subcommand, which
was created to make "side-effectful networking" explicit, instead of riddling several random commands
with various --dry-run flags.</p>
<p><code>host</code> takes several --steps:</p>
<ul>
<li>create: ask Axo Releases to create hosting for the Apps we want to publish</li>
<li>upload: upload built Artifacts to the hosting that <code>create</code> made</li>
<li>release: create Releases for the hosted artifacts, making perma-urls like /v1.0.0/ live</li>
<li>announce: announce all the Releases, wiring them into "list all releases" and "latest release" endpoints</li>
<li>check: equivalent to <code>create</code> but just checks that authentication is properly setup, without side-effects</li>
</ul>
<p>The distinction between upload, release, and announce in particular lets us provide a more
reliable/transactional release process -- we can make the hosting live, publish to package managers,
and <em>then</em> update URLs like /latest/ once everything works, instead of racily doing it all
at once and having to frantically hack things back to normal when something weird happens.
It should also make it possible for us to provide features like Release/PR Previews.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#hosting" rel="noopener noreferrer">hosting config</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/546" rel="noopener noreferrer">preparatory refactor</a></li>
<li>@gankra <a href="https://github.com/axodotdev/gazenot" rel="noopener noreferrer">create gazenot client library</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/567" rel="noopener noreferrer">break tag parsing into "axotag" crate</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/586" rel="noopener noreferrer">properly set announcement body for abyss</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/600" rel="noopener noreferrer">add a comment about Axo Releases beta</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/596" rel="noopener noreferrer">cleanup github releases / ci contents</a></li>
</ul>
</li>
</ul>
<h3>Generic Builds</h3>
<p>0.5.0 contains experimental support for building non-cargo-based projects. These can be in any language, and follow any repository layout, so long as they're accompanied by a cargo-dist manifest file that provides information on how to build and install it. For more information, consult the documentation.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/generic-builds.html" rel="noopener noreferrer">guide</a></li>
<li><a href="https://github.com/axodotdev/axolotlsay-js" rel="noopener noreferrer">example npm project</a></li>
<li><a href="https://github.com/axodotdev/cargo-dist-c-example" rel="noopener noreferrer">example C project</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/axoproject/pull/45" rel="noopener noreferrer">add generic project type</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/549" rel="noopener noreferrer">handle missing PackageId</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/553" rel="noopener noreferrer">implement generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/569" rel="noopener noreferrer">rebase fixup</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/570" rel="noopener noreferrer">print stdout from generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/573" rel="noopener noreferrer">fix --artifacts=global with generic builds</a></li>
</ul>
</li>
</ul>
<h3>MSI</h3>
<p>We've contributed several upstream improvements to cargo-wix, the tool we use to build MSIs, and integrated
that functionality back into cargo-dist.</p>
<p>Where previously you needed to use cargo-wix CLI flags to set various images in your installers,
they are now exposed in <code>[package.metadata.wix]</code> as well as <code>banner</code>, <code>dialog</code>, and <code>product-icon</code>.</p>
<p>There are now also <code>eula</code> and <code>license</code> configs on <code>[package.metadata.wix]</code> that allow you to specify
where to source the eula/license from, and also allow you to explicitly disable auto-eula/auto-license
functionality with <code>eula = false</code> and <code>license = false</code>. <code>cargo dist init</code> will by default set those
to false if it sees they aren't defined in <code>[package.metadata.wix]</code> yet, making things more well-behaved
by default. To restore the old auto-eula behaviour, set them to <code>true</code>.</p>
<p>In addition, significant refactoring was done to the eula/license backend of cargo-wix so that cargo-dist
can properly understand when those files need to be auto-generated. Previously auto-generated licenses/eulas
would just produce broken templates, because cargo-dist wouldn't know about them and get confused.</p>
<ul>
<li>docs
<ul>
<li><a href="https://volks73.github.io/cargo-wix/cargo_wix/#configuration" rel="noopener noreferrer">cargo-wix docs</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/installers/msi.html" rel="noopener noreferrer">cargo-dist msi docs</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/247" rel="noopener noreferrer">refactor eulas and add new config</a></li>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/250" rel="noopener noreferrer">add config for setting installer images</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/503" rel="noopener noreferrer">use new cargo-wix features</a></li>
</ul>
</li>
</ul>
<h3>Source Tarballs</h3>
<p>cargo-dist will now generate its own source tarballs, and upload them to your release, named "source.tar.gz". The source tarballs that github provides are actually generated on demand with unspecified settings, so to ensure both Axo Releases and Github Releases have access to the same results, we need cargo-dist to generate the source tarball itself. We use the same mechanism as Github (asking git itself to generate them), but we can't bitwise-identically reproduce their (unspecified, technically-not-guaranteed) behaviour.</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/604" rel="noopener noreferrer">impl</a></li>
</ul>
<h2>Maintenance/Fixes</h2>
<ul>
<li>@rukai <a href="https://github.com/axodotdev/cargo-dist/pull/578" rel="noopener noreferrer">Remove rust-toolchain-version from the workspaces setup guide</a></li>
<li>@jwodder <a href="https://github.com/axodotdev/cargo-dist/pull/557" rel="noopener noreferrer">Give "upload-local-artifacts" jobs friendlier display names</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.5.0-prerelease.6</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.6</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.6</guid><content:encoded><![CDATA[<p>This release was probably going to be several releases, but everything got finished at the same time, so here's a Mega Release!</p>
<p>The headline features are:</p>
<ul>
<li>New Support For Axo Releases, As An Alternative To Github Releases (Launching Soon™)</li>
<li>New Support For Generic Build Steps, In Any Language (Experimental)</li>
<li>Significantly Improved MSI Installer Support</li>
</ul>
<h2>Features</h2>
<h3>Axo Releases</h3>
<p>Axo Releases users can now enable builtin cargo-dist support by setting</p>
<p><code>hosting = ["axodotdev"]</code></p>
<p>in their <code>[workspace.metadata.dist]</code>.</p>
<p>To sign up for the Axo Releases closed beta, go to <a href="https://dash.axo.dev/" rel="noopener noreferrer">https://dash.axo.dev/</a></p>
<p>You can ask for more details by <a href="https://discord.gg/ECnWuUUXQk" rel="noopener noreferrer">joining our discord</a> or sending a message to <code>hello@axo.dev</code>!</p>
<p>Axo Releases has a more robust pipelined model for creating and hosting a release, which more
closely matches the actual design of cargo-dist. But since we'd only ever supported Github Releases,
some significant internal reckoning was required.</p>
<p>This reckoning primarily appears in the existence of the new "cargo dist host" subcommand, which
was created to make "side-effectful networking" explicit, instead of riddling several random commands
with various --dry-run flags.</p>
<p><code>host</code> takes several --steps:</p>
<ul>
<li>create: ask Axo Releases to create hosting for the Apps we want to publish</li>
<li>upload: upload built Artifacts to the hosting that <code>create</code> made</li>
<li>release: create Releases for the hosted artifacts, making perma-urls like /v1.0.0/ live</li>
<li>announce: announce all the Releases, wiring them into "list all releases" and "latest release" endpoints</li>
<li>check: equivalent to <code>create</code> but just checks that authentication is properly setup, without side-effects</li>
</ul>
<p>The distinction between upload, release, and announce in particular lets us provide a more
reliable/transactional release process -- we can make the hosting live, publish to package managers,
and <em>then</em> update URLs like /latest/ once everything works, instead of racily doing it all
at once and having to frantically hack things back to normal when something weird happens.
It should also make it possible for us to provide features like Release/PR Previews.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#hosting" rel="noopener noreferrer">hosting config</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/546" rel="noopener noreferrer">preparatory refactor</a></li>
<li>@gankra <a href="https://github.com/axodotdev/gazenot" rel="noopener noreferrer">create gazenot client library</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/567" rel="noopener noreferrer">break tag parsing into "axotag" crate</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/586" rel="noopener noreferrer">properly set announcement body for abyss</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/600" rel="noopener noreferrer">add a comment about Axo Releases beta</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/596" rel="noopener noreferrer">cleanup github releases / ci contents</a></li>
</ul>
</li>
</ul>
<h3>Generic Builds</h3>
<p>0.5.0 contains experimental support for building non-cargo-based projects. These can be in any language, and follow any repository layout, so long as they're accompanied by a cargo-dist manifest file that provides information on how to build and install it. For more information, consult the documentation.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/generic-builds.html" rel="noopener noreferrer">guide</a></li>
<li><a href="https://github.com/axodotdev/axolotlsay-js" rel="noopener noreferrer">example npm project</a></li>
<li><a href="https://github.com/axodotdev/cargo-dist-c-example" rel="noopener noreferrer">example C project</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/axoproject/pull/45" rel="noopener noreferrer">add generic project type</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/549" rel="noopener noreferrer">handle missing PackageId</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/553" rel="noopener noreferrer">implement generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/569" rel="noopener noreferrer">rebase fixup</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/570" rel="noopener noreferrer">print stdout from generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/573" rel="noopener noreferrer">fix --artifacts=global with generic builds</a></li>
</ul>
</li>
</ul>
<h3>MSI</h3>
<p>We've contributed several upstream improvements to cargo-wix, the tool we use to build MSIs, and integrated
that functionality back into cargo-dist.</p>
<p>Where previously you needed to use cargo-wix CLI flags to set various images in your installers,
they are now exposed in <code>[package.metadata.wix]</code> as well as <code>banner</code>, <code>dialog</code>, and <code>product-icon</code>.</p>
<p>There are now also <code>eula</code> and <code>license</code> configs on <code>[package.metadata.wix]</code> that allow you to specify
where to source the eula/license from, and also allow you to explicitly disable auto-eula/auto-license
functionality with <code>eula = false</code> and <code>license = false</code>. <code>cargo dist init</code> will by default set those
to false if it sees they aren't defined in <code>[package.metadata.wix]</code> yet, making things more well-behaved
by default. To restore the old auto-eula behaviour, set them to <code>true</code>.</p>
<p>In addition, significant refactoring was done to the eula/license backend of cargo-wix so that cargo-dist
can properly understand when those files need to be auto-generated. Previously auto-generated licenses/eulas
would just produce broken templates, because cargo-dist wouldn't know about them and get confused.</p>
<ul>
<li>docs
<ul>
<li><a href="https://volks73.github.io/cargo-wix/cargo_wix/#configuration" rel="noopener noreferrer">cargo-wix docs</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/installers/msi.html" rel="noopener noreferrer">cargo-dist msi docs</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/247" rel="noopener noreferrer">refactor eulas and add new config</a></li>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/250" rel="noopener noreferrer">add config for setting installer images</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/503" rel="noopener noreferrer">use new cargo-wix features</a></li>
</ul>
</li>
</ul>
<h3>Source Tarballs</h3>
<p>cargo-dist will now generate its own source tarballs, and upload them to your release, named "source.tar.gz". The source tarballs that github provides are actually generated on demand with unspecified settings, so to ensure both Axo Releases and Github Releases have access to the same results, we need cargo-dist to generate the source tarball itself. We use the same mechanism as Github (asking git itself to generate them), but we can't bitwise-identically reproduce their (unspecified, technically-not-guaranteed) behaviour.</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/604" rel="noopener noreferrer">impl</a></li>
</ul>
<h2>Maintenance/Fixes</h2>
<ul>
<li>@rukai <a href="https://github.com/axodotdev/cargo-dist/pull/578" rel="noopener noreferrer">Remove rust-toolchain-version from the workspaces setup guide</a></li>
<li>@jwodder <a href="https://github.com/axodotdev/cargo-dist/pull/557" rel="noopener noreferrer">Give "upload-local-artifacts" jobs friendlier display names</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.5.0-prerelease.5</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.5</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.5</guid><content:encoded><![CDATA[<p>This release was probably going to be several releases, but everything got finished at the same time, so here's a Mega Release!</p>
<p>The headline features are:</p>
<ul>
<li>New Support For Axo Releases, As An Alternative To Github Releases (Launching Soon™)</li>
<li>New Support For Generic Build Steps, In Any Language (Experimental)</li>
<li>Significantly Improved MSI Installer Support</li>
</ul>
<h2>Features</h2>
<h3>Axo Releases</h3>
<p>Axo Releases users can now enable builtin cargo-dist support by setting</p>
<p><code>hosting = ["axodotdev"]</code></p>
<p>in their <code>[workspace.metadata.dist]</code>.</p>
<p>To sign up for the Axo Releases closed beta, go to <a href="https://dash.axo.dev/" rel="noopener noreferrer">https://dash.axo.dev/</a></p>
<p>You can ask for more details by <a href="https://discord.gg/ECnWuUUXQk" rel="noopener noreferrer">joining our discord</a> or sending a message to <code>hello@axo.dev</code>!</p>
<p>Axo Releases has a more robust pipelined model for creating and hosting a release, which more
closely matches the actual design of cargo-dist. But since we'd only ever supported Github Releases,
some significant internal reckoning was required.</p>
<p>This reckoning primarily appears in the existence of the new "cargo dist host" subcommand, which
was created to make "side-effectful networking" explicit, instead of riddling several random commands
with various --dry-run flags.</p>
<p><code>host</code> takes several --steps:</p>
<ul>
<li>create: ask Axo Releases to create hosting for the Apps we want to publish</li>
<li>upload: upload built Artifacts to the hosting that <code>create</code> made</li>
<li>release: create Releases for the hosted artifacts, making perma-urls like /v1.0.0/ live</li>
<li>announce: announce all the Releases, wiring them into "list all releases" and "latest release" endpoints</li>
<li>check: equivalent to <code>create</code> but just checks that authentication is properly setup, without side-effects</li>
</ul>
<p>The distinction between upload, release, and announce in particular lets us provide a more
reliable/transactional release process -- we can make the hosting live, publish to package managers,
and <em>then</em> update URLs like /latest/ once everything works, instead of racily doing it all
at once and having to frantically hack things back to normal when something weird happens.
It should also make it possible for us to provide features like Release/PR Previews.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#hosting" rel="noopener noreferrer">hosting config</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/546" rel="noopener noreferrer">preparatory refactor</a></li>
<li>@gankra <a href="https://github.com/axodotdev/gazenot" rel="noopener noreferrer">create gazenot client library</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/567" rel="noopener noreferrer">break tag parsing into "axotag" crate</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/586" rel="noopener noreferrer">properly set announcement body for abyss</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/600" rel="noopener noreferrer">add a comment about Axo Releases beta</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/596" rel="noopener noreferrer">cleanup github releases / ci contents</a></li>
</ul>
</li>
</ul>
<h3>Generic Builds</h3>
<p>0.5.0 contains experimental support for building non-cargo-based projects. These can be in any language, and follow any repository layout, so long as they're accompanied by a cargo-dist manifest file that provides information on how to build and install it. For more information, consult the documentation.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/generic-builds.html" rel="noopener noreferrer">guide</a></li>
<li><a href="https://github.com/axodotdev/axolotlsay-js" rel="noopener noreferrer">example npm project</a></li>
<li><a href="https://github.com/axodotdev/cargo-dist-c-example" rel="noopener noreferrer">example C project</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/axoproject/pull/45" rel="noopener noreferrer">add generic project type</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/549" rel="noopener noreferrer">handle missing PackageId</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/553" rel="noopener noreferrer">implement generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/569" rel="noopener noreferrer">rebase fixup</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/570" rel="noopener noreferrer">print stdout from generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/573" rel="noopener noreferrer">fix --artifacts=global with generic builds</a></li>
</ul>
</li>
</ul>
<h3>MSI</h3>
<p>We've contributed several upstream improvements to cargo-wix, the tool we use to build MSIs, and integrated
that functionality back into cargo-dist.</p>
<p>Where previously you needed to use cargo-wix CLI flags to set various images in your installers,
they are now exposed in <code>[package.metadata.wix]</code> as well as <code>banner</code>, <code>dialog</code>, and <code>product-icon</code>.</p>
<p>There are now also <code>eula</code> and <code>license</code> configs on <code>[package.metadata.wix]</code> that allow you to specify
where to source the eula/license from, and also allow you to explicitly disable auto-eula/auto-license
functionality with <code>eula = false</code> and <code>license = false</code>. <code>cargo dist init</code> will by default set those
to false if it sees they aren't defined in <code>[package.metadata.wix]</code> yet, making things more well-behaved
by default. To restore the old auto-eula behaviour, set them to <code>true</code>.</p>
<p>In addition, significant refactoring was done to the eula/license backend of cargo-wix so that cargo-dist
can properly understand when those files need to be auto-generated. Previously auto-generated licenses/eulas
would just produce broken templates, because cargo-dist wouldn't know about them and get confused.</p>
<ul>
<li>docs
<ul>
<li><a href="https://volks73.github.io/cargo-wix/cargo_wix/#configuration" rel="noopener noreferrer">cargo-wix docs</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/installers/msi.html" rel="noopener noreferrer">cargo-dist msi docs</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/247" rel="noopener noreferrer">refactor eulas and add new config</a></li>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/250" rel="noopener noreferrer">add config for setting installer images</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/503" rel="noopener noreferrer">use new cargo-wix features</a></li>
</ul>
</li>
</ul>
<h3>Source Tarballs</h3>
<p>cargo-dist will now generate its own source tarballs, and upload them to your release, named "source.tar.gz". The source tarballs that github provides are actually generated on demand with unspecified settings, so to ensure both Axo Releases and Github Releases have access to the same results, we need cargo-dist to generate the source tarball itself. We use the same mechanism as Github (asking git itself to generate them), but we can't bitwise-identically reproduce their (unspecified, technically-not-guaranteed) behaviour.</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/604" rel="noopener noreferrer">impl</a></li>
</ul>
<h2>Maintenance/Fixes</h2>
<ul>
<li>@rukai <a href="https://github.com/axodotdev/cargo-dist/pull/578" rel="noopener noreferrer">Remove rust-toolchain-version from the workspaces setup guide</a></li>
<li>@jwodder <a href="https://github.com/axodotdev/cargo-dist/pull/557" rel="noopener noreferrer">Give "upload-local-artifacts" jobs friendlier display names</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.5.0-prerelease.4</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.4</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.4</guid><content:encoded><![CDATA[<p>This release was probably going to be several releases, but everything got finished at the same time, so here's a Mega Release!</p>
<p>The headline features are:</p>
<ul>
<li>New Support For Axo Releases, As An Alternative To Github Releases (Launching Soon™)</li>
<li>New Support For Generic Build Steps, In Any Language (Experimental)</li>
<li>Significantly Improved MSI Installer Support</li>
</ul>
<h2>Features</h2>
<h3>Axo Releases</h3>
<p>Axo Releases users can now enable builtin cargo-dist support by setting</p>
<p><code>hosting = ["axodotdev"]</code></p>
<p>in their <code>[workspace.metadata.dist]</code>.</p>
<p>To sign up for the Axo Releases closed beta, go to <a href="https://dash.axo.dev/" rel="noopener noreferrer">https://dash.axo.dev/</a></p>
<p>You can ask for more details by <a href="https://discord.gg/ECnWuUUXQk" rel="noopener noreferrer">joining our discord</a> or sending a message to <code>hello@axo.dev</code>!</p>
<p>Axo Releases has a more robust pipelined model for creating and hosting a release, which more
closely matches the actual design of cargo-dist. But since we'd only ever supported Github Releases,
some significant internal reckoning was required.</p>
<p>This reckoning primarily appears in the existence of the new "cargo dist host" subcommand, which
was created to make "side-effectful networking" explicit, instead of riddling several random commands
with various --dry-run flags.</p>
<p><code>host</code> takes several --steps:</p>
<ul>
<li>create: ask Axo Releases to create hosting for the Apps we want to publish</li>
<li>upload: upload built Artifacts to the hosting that <code>create</code> made</li>
<li>release: create Releases for the hosted artifacts, making perma-urls like /v1.0.0/ live</li>
<li>announce: announce all the Releases, wiring them into "list all releases" and "latest release" endpoints</li>
<li>check: equivalent to <code>create</code> but just checks that authentication is properly setup, without side-effects</li>
</ul>
<p>The distinction between upload, release, and announce in particular lets us provide a more
reliable/transactional release process -- we can make the hosting live, publish to package managers,
and <em>then</em> update URLs like /latest/ once everything works, instead of racily doing it all
at once and having to frantically hack things back to normal when something weird happens.
It should also make it possible for us to provide features like Release/PR Previews.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#hosting" rel="noopener noreferrer">hosting config</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/546" rel="noopener noreferrer">preparatory refactor</a></li>
<li>@gankra <a href="https://github.com/axodotdev/gazenot" rel="noopener noreferrer">create gazenot client library</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/567" rel="noopener noreferrer">break tag parsing into "axotag" crate</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/586" rel="noopener noreferrer">properly set announcement body for abyss</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/600" rel="noopener noreferrer">add a comment about Axo Releases beta</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/596" rel="noopener noreferrer">cleanup github releases / ci contents</a></li>
</ul>
</li>
</ul>
<h3>Generic Builds</h3>
<p>0.5.0 contains experimental support for building non-cargo-based projects. These can be in any language, and follow any repository layout, so long as they're accompanied by a cargo-dist manifest file that provides information on how to build and install it. For more information, consult the documentation.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/generic-builds.html" rel="noopener noreferrer">guide</a></li>
<li><a href="https://github.com/axodotdev/axolotlsay-js" rel="noopener noreferrer">example npm project</a></li>
<li><a href="https://github.com/axodotdev/cargo-dist-c-example" rel="noopener noreferrer">example C project</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/axoproject/pull/45" rel="noopener noreferrer">add generic project type</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/549" rel="noopener noreferrer">handle missing PackageId</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/553" rel="noopener noreferrer">implement generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/569" rel="noopener noreferrer">rebase fixup</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/570" rel="noopener noreferrer">print stdout from generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/573" rel="noopener noreferrer">fix --artifacts=global with generic builds</a></li>
</ul>
</li>
</ul>
<h3>MSI</h3>
<p>We've contributed several upstream improvements to cargo-wix, the tool we use to build MSIs, and integrated
that functionality back into cargo-dist.</p>
<p>Where previously you needed to use cargo-wix CLI flags to set various images in your installers,
they are now exposed in <code>[package.metadata.wix]</code> as well as <code>banner</code>, <code>dialog</code>, and <code>product-icon</code>.</p>
<p>There are now also <code>eula</code> and <code>license</code> configs on <code>[package.metadata.wix]</code> that allow you to specify
where to source the eula/license from, and also allow you to explicitly disable auto-eula/auto-license
functionality with <code>eula = false</code> and <code>license = false</code>. <code>cargo dist init</code> will by default set those
to false if it sees they aren't defined in <code>[package.metadata.wix]</code> yet, making things more well-behaved
by default. To restore the old auto-eula behaviour, set them to <code>true</code>.</p>
<p>In addition, significant refactoring was done to the eula/license backend of cargo-wix so that cargo-dist
can properly understand when those files need to be auto-generated. Previously auto-generated licenses/eulas
would just produce broken templates, because cargo-dist wouldn't know about them and get confused.</p>
<ul>
<li>docs
<ul>
<li><a href="https://volks73.github.io/cargo-wix/cargo_wix/#configuration" rel="noopener noreferrer">cargo-wix docs</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/installers/msi.html" rel="noopener noreferrer">cargo-dist msi docs</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/247" rel="noopener noreferrer">refactor eulas and add new config</a></li>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/250" rel="noopener noreferrer">add config for setting installer images</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/503" rel="noopener noreferrer">use new cargo-wix features</a></li>
</ul>
</li>
</ul>
<h3>Source Tarballs</h3>
<p>cargo-dist will now generate its own source tarballs, and upload them to your release, named "source.tar.gz". The source tarballs that github provides are actually generated on demand with unspecified settings, so to ensure both Axo Releases and Github Releases have access to the same results, we need cargo-dist to generate the source tarball itself. We use the same mechanism as Github (asking git itself to generate them), but we can't bitwise-identically reproduce their (unspecified, technically-not-guaranteed) behaviour.</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/604" rel="noopener noreferrer">impl</a></li>
</ul>
<h2>Maintenance/Fixes</h2>
<ul>
<li>@rukai <a href="https://github.com/axodotdev/cargo-dist/pull/578" rel="noopener noreferrer">Remove rust-toolchain-version from the workspaces setup guide</a></li>
<li>@jwodder <a href="https://github.com/axodotdev/cargo-dist/pull/557" rel="noopener noreferrer">Give "upload-local-artifacts" jobs friendlier display names</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.5.0-prerelease.3</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.3</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.3</guid><content:encoded><![CDATA[<p>This release was probably going to be several releases, but everything got finished at the same time, so here's a Mega Release!</p>
<p>The headline features are:</p>
<ul>
<li>New Support For Axo Releases, As An Alternative To Github Releases (Launching Soon™)</li>
<li>New Support For Generic Build Steps, In Any Language (Experimental)</li>
<li>Significantly Improved MSI Installer Support</li>
</ul>
<h2>Features</h2>
<h3>Axo Releases</h3>
<p>Axo Releases users can now enable builtin cargo-dist support by setting</p>
<p><code>hosting = ["axodotdev"]</code></p>
<p>in their <code>[workspace.metadata.dist]</code>.</p>
<p>To sign up for the Axo Releases closed beta, go to <a href="https://dash.axo.dev/" rel="noopener noreferrer">https://dash.axo.dev/</a></p>
<p>You can ask for more details by <a href="https://discord.gg/ECnWuUUXQk" rel="noopener noreferrer">joining our discord</a> or sending a message to <code>hello@axo.dev</code>!</p>
<p>Axo Releases has a more robust pipelined model for creating and hosting a release, which more
closely matches the actual design of cargo-dist. But since we'd only ever supported Github Releases,
some significant internal reckoning was required.</p>
<p>This reckoning primarily appears in the existence of the new "cargo dist host" subcommand, which
was created to make "side-effectful networking" explicit, instead of riddling several random commands
with various --dry-run flags.</p>
<p><code>host</code> takes several --steps:</p>
<ul>
<li>create: ask Axo Releases to create hosting for the Apps we want to publish</li>
<li>upload: upload built Artifacts to the hosting that <code>create</code> made</li>
<li>release: create Releases for the hosted artifacts, making perma-urls like /v1.0.0/ live</li>
<li>announce: announce all the Releases, wiring them into "list all releases" and "latest release" endpoints</li>
<li>check: equivalent to <code>create</code> but just checks that authentication is properly setup, without side-effects</li>
</ul>
<p>The distinction between upload, release, and announce in particular lets us provide a more
reliable/transactional release process -- we can make the hosting live, publish to package managers,
and <em>then</em> update URLs like /latest/ once everything works, instead of racily doing it all
at once and having to frantically hack things back to normal when something weird happens.
It should also make it possible for us to provide features like Release/PR Previews.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#hosting" rel="noopener noreferrer">hosting config</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/546" rel="noopener noreferrer">preparatory refactor</a></li>
<li>@gankra <a href="https://github.com/axodotdev/gazenot" rel="noopener noreferrer">create gazenot client library</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/567" rel="noopener noreferrer">break tag parsing into "axotag" crate</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/586" rel="noopener noreferrer">properly set announcement body for abyss</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/600" rel="noopener noreferrer">add a comment about Axo Releases beta</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/596" rel="noopener noreferrer">cleanup github releases / ci contents</a></li>
</ul>
</li>
</ul>
<h3>Generic Builds</h3>
<p>0.5.0 contains experimental support for building non-cargo-based projects. These can be in any language, and follow any repository layout, so long as they're accompanied by a cargo-dist manifest file that provides information on how to build and install it. For more information, consult the documentation.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/generic-builds.html" rel="noopener noreferrer">guide</a></li>
<li><a href="https://github.com/axodotdev/axolotlsay-js" rel="noopener noreferrer">example npm project</a></li>
<li><a href="https://github.com/axodotdev/cargo-dist-c-example" rel="noopener noreferrer">example C project</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/axoproject/pull/45" rel="noopener noreferrer">add generic project type</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/549" rel="noopener noreferrer">handle missing PackageId</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/553" rel="noopener noreferrer">implement generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/569" rel="noopener noreferrer">rebase fixup</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/570" rel="noopener noreferrer">print stdout from generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/573" rel="noopener noreferrer">fix --artifacts=global with generic builds</a></li>
</ul>
</li>
</ul>
<h3>MSI</h3>
<p>We've contributed several upstream improvements to cargo-wix, the tool we use to build MSIs, and integrated
that functionality back into cargo-dist.</p>
<p>Where previously you needed to use cargo-wix CLI flags to set various images in your installers,
they are now exposed in <code>[package.metadata.wix]</code> as well as <code>banner</code>, <code>dialog</code>, and <code>product-icon</code>.</p>
<p>There are now also <code>eula</code> and <code>license</code> configs on <code>[package.metadata.wix]</code> that allow you to specify
where to source the eula/license from, and also allow you to explicitly disable auto-eula/auto-license
functionality with <code>eula = false</code> and <code>license = false</code>. <code>cargo dist init</code> will by default set those
to false if it sees they aren't defined in <code>[package.metadata.wix]</code> yet, making things more well-behaved
by default. To restore the old auto-eula behaviour, set them to <code>true</code>.</p>
<p>In addition, significant refactoring was done to the eula/license backend of cargo-wix so that cargo-dist
can properly understand when those files need to be auto-generated. Previously auto-generated licenses/eulas
would just produce broken templates, because cargo-dist wouldn't know about them and get confused.</p>
<ul>
<li>docs
<ul>
<li><a href="https://volks73.github.io/cargo-wix/cargo_wix/#configuration" rel="noopener noreferrer">cargo-wix docs</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/installers/msi.html" rel="noopener noreferrer">cargo-dist msi docs</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/247" rel="noopener noreferrer">refactor eulas and add new config</a></li>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/250" rel="noopener noreferrer">add config for setting installer images</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/503" rel="noopener noreferrer">use new cargo-wix features</a></li>
</ul>
</li>
</ul>
<h3>Source Tarballs</h3>
<p>cargo-dist will now generate its own source tarballs, and upload them to your release, named "source.tar.gz". The source tarballs that github provides are actually generated on demand with unspecified settings, so to ensure both Axo Releases and Github Releases have access to the same results, we need cargo-dist to generate the source tarball itself. We use the same mechanism as Github (asking git itself to generate them), but we can't bitwise-identically reproduce their (unspecified, technically-not-guaranteed) behaviour.</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/604" rel="noopener noreferrer">impl</a></li>
</ul>
<h2>Maintenance/Fixes</h2>
<ul>
<li>@rukai <a href="https://github.com/axodotdev/cargo-dist/pull/578" rel="noopener noreferrer">Remove rust-toolchain-version from the workspaces setup guide</a></li>
<li>@jwodder <a href="https://github.com/axodotdev/cargo-dist/pull/557" rel="noopener noreferrer">Give "upload-local-artifacts" jobs friendlier display names</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.5.0-prerelease.2</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.2</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.2</guid><content:encoded><![CDATA[<p>This release was probably going to be several releases, but everything got finished at the same time, so here's a Mega Release!</p>
<p>The headline features are:</p>
<ul>
<li>New Support For Axo Releases, As An Alternative To Github Releases (Launching Soon™)</li>
<li>New Support For Generic Build Steps, In Any Language (Experimental)</li>
<li>Significantly Improved MSI Installer Support</li>
</ul>
<h2>Features</h2>
<h3>Axo Releases</h3>
<p>Axo Releases users can now enable builtin cargo-dist support by setting</p>
<p><code>hosting = ["axodotdev"]</code></p>
<p>in their <code>[workspace.metadata.dist]</code>.</p>
<p>To sign up for the Axo Releases closed beta, go to <a href="https://dash.axo.dev/" rel="noopener noreferrer">https://dash.axo.dev/</a></p>
<p>You can ask for more details by <a href="https://discord.gg/ECnWuUUXQk" rel="noopener noreferrer">joining our discord</a> or sending a message to <code>hello@axo.dev</code>!</p>
<p>Axo Releases has a more robust pipelined model for creating and hosting a release, which more
closely matches the actual design of cargo-dist. But since we'd only ever supported Github Releases,
some significant internal reckoning was required.</p>
<p>This reckoning primarily appears in the existence of the new "cargo dist host" subcommand, which
was created to make "side-effectful networking" explicit, instead of riddling several random commands
with various --dry-run flags.</p>
<p><code>host</code> takes several --steps:</p>
<ul>
<li>create: ask Axo Releases to create hosting for the Apps we want to publish</li>
<li>upload: upload built Artifacts to the hosting that <code>create</code> made</li>
<li>release: create Releases for the hosted artifacts, making perma-urls like /v1.0.0/ live</li>
<li>announce: announce all the Releases, wiring them into "list all releases" and "latest release" endpoints</li>
<li>check: equivalent to <code>create</code> but just checks that authentication is properly setup, without side-effects</li>
</ul>
<p>The distinction between upload, release, and announce in particular lets us provide a more
reliable/transactional release process -- we can make the hosting live, publish to package managers,
and <em>then</em> update URLs like /latest/ once everything works, instead of racily doing it all
at once and having to frantically hack things back to normal when something weird happens.
It should also make it possible for us to provide features like Release/PR Previews.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#hosting" rel="noopener noreferrer">hosting config</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/546" rel="noopener noreferrer">preparatory refactor</a></li>
<li>@gankra <a href="https://github.com/axodotdev/gazenot" rel="noopener noreferrer">create gazenot client library</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/567" rel="noopener noreferrer">break tag parsing into "axotag" crate</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/586" rel="noopener noreferrer">properly set announcement body for abyss</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/600" rel="noopener noreferrer">add a comment about Axo Releases beta</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/596" rel="noopener noreferrer">cleanup github releases / ci contents</a></li>
</ul>
</li>
</ul>
<h3>Generic Builds</h3>
<p>0.5.0 contains experimental support for building non-cargo-based projects. These can be in any language, and follow any repository layout, so long as they're accompanied by a cargo-dist manifest file that provides information on how to build and install it. For more information, consult the documentation.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/generic-builds.html" rel="noopener noreferrer">guide</a></li>
<li><a href="https://github.com/axodotdev/axolotlsay-js" rel="noopener noreferrer">example npm project</a></li>
<li><a href="https://github.com/axodotdev/cargo-dist-c-example" rel="noopener noreferrer">example C project</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/axoproject/pull/45" rel="noopener noreferrer">add generic project type</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/549" rel="noopener noreferrer">handle missing PackageId</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/553" rel="noopener noreferrer">implement generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/569" rel="noopener noreferrer">rebase fixup</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/570" rel="noopener noreferrer">print stdout from generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/573" rel="noopener noreferrer">fix --artifacts=global with generic builds</a></li>
</ul>
</li>
</ul>
<h3>MSI</h3>
<p>We've contributed several upstream improvements to cargo-wix, the tool we use to build MSIs, and integrated
that functionality back into cargo-dist.</p>
<p>Where previously you needed to use cargo-wix CLI flags to set various images in your installers,
they are now exposed in <code>[package.metadata.wix]</code> as well as <code>banner</code>, <code>dialog</code>, and <code>product-icon</code>.</p>
<p>There are now also <code>eula</code> and <code>license</code> configs on <code>[package.metadata.wix]</code> that allow you to specify
where to source the eula/license from, and also allow you to explicitly disable auto-eula/auto-license
functionality with <code>eula = false</code> and <code>license = false</code>. <code>cargo dist init</code> will by default set those
to false if it sees they aren't defined in <code>[package.metadata.wix]</code> yet, making things more well-behaved
by default. To restore the old auto-eula behaviour, set them to <code>true</code>.</p>
<p>In addition, significant refactoring was done to the eula/license backend of cargo-wix so that cargo-dist
can properly understand when those files need to be auto-generated. Previously auto-generated licenses/eulas
would just produce broken templates, because cargo-dist wouldn't know about them and get confused.</p>
<ul>
<li>docs
<ul>
<li><a href="https://volks73.github.io/cargo-wix/cargo_wix/#configuration" rel="noopener noreferrer">cargo-wix docs</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/installers/msi.html" rel="noopener noreferrer">cargo-dist msi docs</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/247" rel="noopener noreferrer">refactor eulas and add new config</a></li>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/250" rel="noopener noreferrer">add config for setting installer images</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/503" rel="noopener noreferrer">use new cargo-wix features</a></li>
</ul>
</li>
</ul>
<h3>Source Tarballs</h3>
<p>cargo-dist will now generate its own source tarballs, and upload them to your release, named "source.tar.gz". The source tarballs that github provides are actually generated on demand with unspecified settings, so to ensure both Axo Releases and Github Releases have access to the same results, we need cargo-dist to generate the source tarball itself. We use the same mechanism as Github (asking git itself to generate them), but we can't bitwise-identically reproduce their (unspecified, technically-not-guaranteed) behaviour.</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/604" rel="noopener noreferrer">impl</a></li>
</ul>
<h2>Maintenance/Fixes</h2>
<ul>
<li>@rukai <a href="https://github.com/axodotdev/cargo-dist/pull/578" rel="noopener noreferrer">Remove rust-toolchain-version from the workspaces setup guide</a></li>
<li>@jwodder <a href="https://github.com/axodotdev/cargo-dist/pull/557" rel="noopener noreferrer">Give "upload-local-artifacts" jobs friendlier display names</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.5.0-prerelease.1</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.1</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.5.0-prerelease.1</guid><content:encoded><![CDATA[<p>This release was probably going to be several releases, but everything got finished at the same time, so here's a Mega Release!</p>
<p>The headline features are:</p>
<ul>
<li>New Support For Axo Releases, As An Alternative To Github Releases (Launching Soon™)</li>
<li>New Support For Generic Build Steps, In Any Language (Experimental)</li>
<li>Significantly Improved MSI Installer Support</li>
</ul>
<h2>Features</h2>
<h3>Axo Releases</h3>
<p>Axo Releases users can now enable builtin cargo-dist support by setting</p>
<p><code>hosting = ["axodotdev"]</code></p>
<p>in their <code>[workspace.metadata.dist]</code>.</p>
<p>To sign up for the Axo Releases closed beta, go to <a href="https://dash.axo.dev/" rel="noopener noreferrer">https://dash.axo.dev/</a></p>
<p>You can ask for more details by <a href="https://discord.gg/ECnWuUUXQk" rel="noopener noreferrer">joining our discord</a> or sending a message to <code>hello@axo.dev</code>!</p>
<p>Axo Releases has a more robust pipelined model for creating and hosting a release, which more
closely matches the actual design of cargo-dist. But since we'd only ever supported Github Releases,
some significant internal reckoning was required.</p>
<p>This reckoning primarily appears in the existence of the new "cargo dist host" subcommand, which
was created to make "side-effectful networking" explicit, instead of riddling several random commands
with various --dry-run flags.</p>
<p><code>host</code> takes several --steps:</p>
<ul>
<li>create: ask Axo Releases to create hosting for the Apps we want to publish</li>
<li>upload: upload built Artifacts to the hosting that <code>create</code> made</li>
<li>release: create Releases for the hosted artifacts, making perma-urls like /v1.0.0/ live</li>
<li>announce: announce all the Releases, wiring them into "list all releases" and "latest release" endpoints</li>
<li>check: equivalent to <code>create</code> but just checks that authentication is properly setup, without side-effects</li>
</ul>
<p>The distinction between upload, release, and announce in particular lets us provide a more
reliable/transactional release process -- we can make the hosting live, publish to package managers,
and <em>then</em> update URLs like /latest/ once everything works, instead of racily doing it all
at once and having to frantically hack things back to normal when something weird happens.
It should also make it possible for us to provide features like Release/PR Previews.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#hosting" rel="noopener noreferrer">hosting config</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/546" rel="noopener noreferrer">preparatory refactor</a></li>
<li>@gankra <a href="https://github.com/axodotdev/gazenot" rel="noopener noreferrer">create gazenot client library</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/567" rel="noopener noreferrer">break tag parsing into "axotag" crate</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/586" rel="noopener noreferrer">properly set announcement body for abyss</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/600" rel="noopener noreferrer">add a comment about Axo Releases beta</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/596" rel="noopener noreferrer">cleanup github releases / ci contents</a></li>
</ul>
</li>
</ul>
<h3>Generic Builds</h3>
<p>0.5.0 contains experimental support for building non-cargo-based projects. These can be in any language, and follow any repository layout, so long as they're accompanied by a cargo-dist manifest file that provides information on how to build and install it. For more information, consult the documentation.</p>
<ul>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/generic-builds.html" rel="noopener noreferrer">guide</a></li>
<li><a href="https://github.com/axodotdev/axolotlsay-js" rel="noopener noreferrer">example npm project</a></li>
<li><a href="https://github.com/axodotdev/cargo-dist-c-example" rel="noopener noreferrer">example C project</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/axoproject/pull/45" rel="noopener noreferrer">add generic project type</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/549" rel="noopener noreferrer">handle missing PackageId</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/553" rel="noopener noreferrer">implement generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/569" rel="noopener noreferrer">rebase fixup</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/570" rel="noopener noreferrer">print stdout from generic builds</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/573" rel="noopener noreferrer">fix --artifacts=global with generic builds</a></li>
</ul>
</li>
</ul>
<h3>MSI</h3>
<p>We've contributed several upstream improvements to cargo-wix, the tool we use to build MSIs, and integrated
that functionality back into cargo-dist.</p>
<p>Where previously you needed to use cargo-wix CLI flags to set various images in your installers,
they are now exposed in <code>[package.metadata.wix]</code> as well as <code>banner</code>, <code>dialog</code>, and <code>product-icon</code>.</p>
<p>There are now also <code>eula</code> and <code>license</code> configs on <code>[package.metadata.wix]</code> that allow you to specify
where to source the eula/license from, and also allow you to explicitly disable auto-eula/auto-license
functionality with <code>eula = false</code> and <code>license = false</code>. <code>cargo dist init</code> will by default set those
to false if it sees they aren't defined in <code>[package.metadata.wix]</code> yet, making things more well-behaved
by default. To restore the old auto-eula behaviour, set them to <code>true</code>.</p>
<p>In addition, significant refactoring was done to the eula/license backend of cargo-wix so that cargo-dist
can properly understand when those files need to be auto-generated. Previously auto-generated licenses/eulas
would just produce broken templates, because cargo-dist wouldn't know about them and get confused.</p>
<ul>
<li>docs
<ul>
<li><a href="https://volks73.github.io/cargo-wix/cargo_wix/#configuration" rel="noopener noreferrer">cargo-wix docs</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/installers/msi.html" rel="noopener noreferrer">cargo-dist msi docs</a></li>
</ul>
</li>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/247" rel="noopener noreferrer">refactor eulas and add new config</a></li>
<li>@gankra <a href="https://github.com/volks73/cargo-wix/pull/250" rel="noopener noreferrer">add config for setting installer images</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/503" rel="noopener noreferrer">use new cargo-wix features</a></li>
</ul>
</li>
</ul>
<h3>Source Tarballs</h3>
<p>cargo-dist will now generate its own source tarballs, and upload them to your release, named "source.tar.gz". The source tarballs that github provides are actually generated on demand with unspecified settings, so to ensure both Axo Releases and Github Releases have access to the same results, we need cargo-dist to generate the source tarball itself. We use the same mechanism as Github (asking git itself to generate them), but we can't bitwise-identically reproduce their (unspecified, technically-not-guaranteed) behaviour.</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/604" rel="noopener noreferrer">impl</a></li>
</ul>
<h2>Maintenance/Fixes</h2>
<ul>
<li>@rukai <a href="https://github.com/axodotdev/cargo-dist/pull/578" rel="noopener noreferrer">Remove rust-toolchain-version from the workspaces setup guide</a></li>
<li>@jwodder <a href="https://github.com/axodotdev/cargo-dist/pull/557" rel="noopener noreferrer">Give "upload-local-artifacts" jobs friendlier display names</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.4.3 (2023-11-08)</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.4.3</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.4.3</guid><content:encoded><![CDATA[<p>This is a small bugfix release which resolves an issue where we would sometimes generate non-working Homebrew installers.</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/554" rel="noopener noreferrer">Homebrew: Fixed an issue where generated class names might not match the name Homebrew looks for</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.4.2 (2023-10-31)</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.4.2</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.4.2</guid><content:encoded><![CDATA[<p>Just a little release to get a couple small fixes in people's hands!</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/525" rel="noopener noreferrer">Linkage report: Fixed an issue where Linux libraries not associated with an apt package would be followed by ()</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/528" rel="noopener noreferrer">Includes: check for existence of included files/dirs as late as possible to allow build.rs to generate them</a></li>
</ul>
<p>(This is a rerelease of 0.4.1, because that one wasn't properly rebased to include all the advertised fixes.)</p>
]]></content:encoded></item><item><title>Version 0.4.1 (2023-10-30)</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.4.1</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.4.1</guid><content:encoded><![CDATA[<p>(See 0.4.2 for the actual release)</p>
<p>Just a little release to get a couple small fixes in people's hands!</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/525" rel="noopener noreferrer">Linkage report: Fixed an issue where Linux libraries not associated with an apt package would be followed by ()</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/528" rel="noopener noreferrer">Includes: check for existence of included files/dirs as late as possible to allow build.rs to generate them</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.4.0 (2023-10-25)</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.4.0</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.4.0</guid><content:encoded><![CDATA[<p>This release contains several major features related to package dependencies. cargo-dist can now install dependencies for you in CI, ensure your users have those dependencies in their installers, and provide you insights into what external libraries your package links against! It also enables support for statically-built musl binaries on Linux.</p>
<h2>Features</h2>
<h3>Install custom dependencies</h3>
<p>Way back in our <a href="https://blog.axo.dev/2023/02/cargo-dist" rel="noopener noreferrer">very first blog post</a>, we wrote about how users could customize the GitHub CI scripts we output to install custom dependencies. As of cargo-dist 0.4.0, you won't need to do that anymore! System dependencies — that is, dependencies installed via the system's package manager instead of <code>cargo</code> — can now be specified in your cargo-dist config in <code>Cargo.toml</code> using a syntax very similar to how your <code>cargo</code> dependencies are specified. For example:</p>
<pre style="background-color:#263238;"><span style="color:#89ddff;">[workspace.metadata.dist.dependencies.homebrew]
</span><span style="color:#f07178;">cmake </span><span style="color:#89ddff;">= { </span><span style="color:#f07178;">targets </span><span style="color:#89ddff;">= ["</span><span style="color:#c3e88d;">x86_64-apple-darwin</span><span style="color:#89ddff;">"] }
</span><span style="color:#f07178;">libcue </span><span style="color:#89ddff;">= "</span><span style="color:#c3e88d;">2.2.1</span><span style="color:#89ddff;">"
</span><span style="color:#eeffff;">
</span><span style="color:#89ddff;">[workspace.metadata.dist.dependencies.apt]
</span><span style="color:#f07178;">cmake </span><span style="color:#89ddff;">= '</span><span style="color:#c3e88d;">*</span><span style="color:#89ddff;">'
</span><span style="color:#f07178;">libcue-dev </span><span style="color:#89ddff;">= { </span><span style="color:#f07178;">version </span><span style="color:#89ddff;">= "</span><span style="color:#c3e88d;">2.2.1-2</span><span style="color:#89ddff;">" }
</span></pre>

<p>For more information, see the <a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#dependencies" rel="noopener noreferrer">documentation</a>.</p>
<ul>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/428" rel="noopener noreferrer">initial impl</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/504" rel="noopener noreferrer">improve Homebrew integration</a></li>
</ul>
</li>
</ul>
<h3>Find out what your builds linked against</h3>
<p>Complementing the ability to specify system dependencies, we've added a new feature that lets you tell which libraries your Rust programs have dynamically linked against. While most Rust software is statically linked, installing external dependencies may mean that your software links against something on the system; you can visualize which libraries your software uses, and which packages they come from, by viewing the output of the build step in CI.</p>
<p>In addition, cargo-dist now uses this information to choose which dependencies to specify when building system package manager installers such as a Homebrew formula. If cargo-dist detects that your binary links against a package provided by Homebrew, it will ensure that a user who <code>brew install</code>s your package will also get that other package.</p>
<p>This feature has full support for macOS and Linux. On Windows, we're not able to list which package a system library comes.</p>
<ul>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/426" rel="noopener noreferrer">initial impl</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/475" rel="noopener noreferrer">infer dependencies via linkage</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/474" rel="noopener noreferrer">fetch full name of Homebrew tap</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/495" rel="noopener noreferrer">improve apt package resolution</a></li>
</ul>
</li>
</ul>
<h3>musl support</h3>
<p>This release adds support for a long-requested feature, creating Linux binaries statically linked against musl instead of glibc. These can be enabled adding the <code>x86_64-unknown-linux-musl</code> target triple to your list of desired targets.</p>
<p>Note that because these binaries are statically linked, they cannot dynamically link against any other C libraries — including C libraries installed using the system dependency feature mentioned above. If your software links against system libraries, please ensure that a static library is available to the build.</p>
<ul>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/483" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra + @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/497" rel="noopener noreferrer">use musl binaries in installers</a></li>
</ul>
</li>
</ul>
<h3>msvc-crt-static opt-out</h3>
<p>cargo-dist has <a href="https://github.com/rust-lang/rfcs/blob/master/text/1721-crt-static.md" rel="noopener noreferrer">always forced +crt-static on, as it is considered more correct for targetting Windows with the typical statically linked Rust binary</a>. However with the introduction of initial support for chocolatey as a system package manager, it's now very easy for our users to dynamically link other DLLs. Once you do, <a href="https://github.com/axodotdev/cargo-dist/issues/496" rel="noopener noreferrer">it once again becomes more correct to dynamically link the windows crt, and to use systems like Visual C(++) Redistributables</a>.</p>
<p>Although we <a href="https://github.com/axodotdev/cargo-dist/issues/496" rel="noopener noreferrer">would like to teach cargo-dist to handle redistributables for you</a>, we're starting with a simple escape hatch: if you set <code>msvc-crt-static = false</code> in <code>[workspace.metadata.dist]</code>, we'll revert to the typical Rust behaviour of dynamically linking the CRT.</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/507" rel="noopener noreferrer">impl</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#msvc-crt-static" rel="noopener noreferrer">docs</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.4.0-prerelease.3</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.4.0-prerelease.3</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.4.0-prerelease.3</guid><content:encoded><![CDATA[<p>This release contains several major features related to package dependencies. cargo-dist can now install dependencies for you in CI, ensure your users have those dependencies in their installers, and provide you insights into what external libraries your package links against! It also enables support for statically-built musl binaries on Linux.</p>
<h2>Features</h2>
<h3>Install custom dependencies</h3>
<p>Way back in our <a href="https://blog.axo.dev/2023/02/cargo-dist" rel="noopener noreferrer">very first blog post</a>, we wrote about how users could customize the GitHub CI scripts we output to install custom dependencies. As of cargo-dist 0.4.0, you won't need to do that anymore! System dependencies — that is, dependencies installed via the system's package manager instead of <code>cargo</code> — can now be specified in your cargo-dist config in <code>Cargo.toml</code> using a syntax very similar to how your <code>cargo</code> dependencies are specified. For example:</p>
<pre style="background-color:#263238;"><span style="color:#89ddff;">[workspace.metadata.dist.dependencies.homebrew]
</span><span style="color:#f07178;">cmake </span><span style="color:#89ddff;">= { </span><span style="color:#f07178;">targets </span><span style="color:#89ddff;">= ["</span><span style="color:#c3e88d;">x86_64-apple-darwin</span><span style="color:#89ddff;">"] }
</span><span style="color:#f07178;">libcue </span><span style="color:#89ddff;">= "</span><span style="color:#c3e88d;">2.2.1</span><span style="color:#89ddff;">"
</span><span style="color:#eeffff;">
</span><span style="color:#89ddff;">[workspace.metadata.dist.dependencies.apt]
</span><span style="color:#f07178;">cmake </span><span style="color:#89ddff;">= '</span><span style="color:#c3e88d;">*</span><span style="color:#89ddff;">'
</span><span style="color:#f07178;">libcue-dev </span><span style="color:#89ddff;">= { </span><span style="color:#f07178;">version </span><span style="color:#89ddff;">= "</span><span style="color:#c3e88d;">2.2.1-2</span><span style="color:#89ddff;">" }
</span></pre>

<p>For more information, see the <a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#dependencies" rel="noopener noreferrer">documentation</a>.</p>
<ul>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/428" rel="noopener noreferrer">initial impl</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/504" rel="noopener noreferrer">improve Homebrew integration</a></li>
</ul>
</li>
</ul>
<h3>Find out what your builds linked against</h3>
<p>Complementing the ability to specify system dependencies, we've added a new feature that lets you tell which libraries your Rust programs have dynamically linked against. While most Rust software is statically linked, installing external dependencies may mean that your software links against something on the system; you can visualize which libraries your software uses, and which packages they come from, by viewing the output of the build step in CI.</p>
<p>In addition, cargo-dist now uses this information to choose which dependencies to specify when building system package manager installers such as a Homebrew formula. If cargo-dist detects that your binary links against a package provided by Homebrew, it will ensure that a user who <code>brew install</code>s your package will also get that other package.</p>
<p>This feature has full support for macOS and Linux. On Windows, we're not able to list which package a system library comes.</p>
<ul>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/426" rel="noopener noreferrer">initial impl</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/475" rel="noopener noreferrer">infer dependencies via linkage</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/474" rel="noopener noreferrer">fetch full name of Homebrew tap</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/495" rel="noopener noreferrer">improve apt package resolution</a></li>
</ul>
</li>
</ul>
<h3>musl support</h3>
<p>This release adds support for a long-requested feature, creating Linux binaries statically linked against musl instead of glibc. These can be enabled adding the <code>x86_64-unknown-linux-musl</code> target triple to your list of desired targets.</p>
<p>Note that because these binaries are statically linked, they cannot dynamically link against any other C libraries — including C libraries installed using the system dependency feature mentioned above. If your software links against system libraries, please ensure that a static library is available to the build.</p>
<ul>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/483" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra + @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/497" rel="noopener noreferrer">use musl binaries in installers</a></li>
</ul>
</li>
</ul>
<h3>msvc-crt-static opt-out</h3>
<p>cargo-dist has <a href="https://github.com/rust-lang/rfcs/blob/master/text/1721-crt-static.md" rel="noopener noreferrer">always forced +crt-static on, as it is considered more correct for targetting Windows with the typical statically linked Rust binary</a>. However with the introduction of initial support for chocolatey as a system package manager, it's now very easy for our users to dynamically link other DLLs. Once you do, <a href="https://github.com/axodotdev/cargo-dist/issues/496" rel="noopener noreferrer">it once again becomes more correct to dynamically link the windows crt, and to use systems like Visual C(++) Redistributables</a>.</p>
<p>Although we <a href="https://github.com/axodotdev/cargo-dist/issues/496" rel="noopener noreferrer">would like to teach cargo-dist to handle redistributables for you</a>, we're starting with a simple escape hatch: if you set <code>msvc-crt-static = false</code> in <code>[workspace.metadata.dist]</code>, we'll revert to the typical Rust behaviour of dynamically linking the CRT.</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/507" rel="noopener noreferrer">impl</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#msvc-crt-static" rel="noopener noreferrer">docs</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.4.0-prerelease.2</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.4.0-prerelease.2</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.4.0-prerelease.2</guid><content:encoded><![CDATA[<p>This release contains several major features related to package dependencies. cargo-dist can now install dependencies for you in CI, ensure your users have those dependencies in their installers, and provide you insights into what external libraries your package links against! It also enables support for statically-built musl binaries on Linux.</p>
<h2>Features</h2>
<h3>Install custom dependencies</h3>
<p>Way back in our <a href="https://blog.axo.dev/2023/02/cargo-dist" rel="noopener noreferrer">very first blog post</a>, we wrote about how users could customize the GitHub CI scripts we output to install custom dependencies. As of cargo-dist 0.4.0, you won't need to do that anymore! System dependencies — that is, dependencies installed via the system's package manager instead of <code>cargo</code> — can now be specified in your cargo-dist config in <code>Cargo.toml</code> using a syntax very similar to how your <code>cargo</code> dependencies are specified. For example:</p>
<pre style="background-color:#263238;"><span style="color:#89ddff;">[workspace.metadata.dist.dependencies.homebrew]
</span><span style="color:#f07178;">cmake </span><span style="color:#89ddff;">= { </span><span style="color:#f07178;">targets </span><span style="color:#89ddff;">= ["</span><span style="color:#c3e88d;">x86_64-apple-darwin</span><span style="color:#89ddff;">"] }
</span><span style="color:#f07178;">libcue </span><span style="color:#89ddff;">= "</span><span style="color:#c3e88d;">2.2.1</span><span style="color:#89ddff;">"
</span><span style="color:#eeffff;">
</span><span style="color:#89ddff;">[workspace.metadata.dist.dependencies.apt]
</span><span style="color:#f07178;">cmake </span><span style="color:#89ddff;">= '</span><span style="color:#c3e88d;">*</span><span style="color:#89ddff;">'
</span><span style="color:#f07178;">libcue-dev </span><span style="color:#89ddff;">= { </span><span style="color:#f07178;">version </span><span style="color:#89ddff;">= "</span><span style="color:#c3e88d;">2.2.1-2</span><span style="color:#89ddff;">" }
</span></pre>

<p>For more information, see the <a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#dependencies" rel="noopener noreferrer">documentation</a>.</p>
<ul>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/428" rel="noopener noreferrer">initial impl</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/504" rel="noopener noreferrer">improve Homebrew integration</a></li>
</ul>
</li>
</ul>
<h3>Find out what your builds linked against</h3>
<p>Complementing the ability to specify system dependencies, we've added a new feature that lets you tell which libraries your Rust programs have dynamically linked against. While most Rust software is statically linked, installing external dependencies may mean that your software links against something on the system; you can visualize which libraries your software uses, and which packages they come from, by viewing the output of the build step in CI.</p>
<p>In addition, cargo-dist now uses this information to choose which dependencies to specify when building system package manager installers such as a Homebrew formula. If cargo-dist detects that your binary links against a package provided by Homebrew, it will ensure that a user who <code>brew install</code>s your package will also get that other package.</p>
<p>This feature has full support for macOS and Linux. On Windows, we're not able to list which package a system library comes.</p>
<ul>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/426" rel="noopener noreferrer">initial impl</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/475" rel="noopener noreferrer">infer dependencies via linkage</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/474" rel="noopener noreferrer">fetch full name of Homebrew tap</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/495" rel="noopener noreferrer">improve apt package resolution</a></li>
</ul>
</li>
</ul>
<h3>musl support</h3>
<p>This release adds support for a long-requested feature, creating Linux binaries statically linked against musl instead of glibc. These can be enabled adding the <code>x86_64-unknown-linux-musl</code> target triple to your list of desired targets.</p>
<p>Note that because these binaries are statically linked, they cannot dynamically link against any other C libraries — including C libraries installed using the system dependency feature mentioned above. If your software links against system libraries, please ensure that a static library is available to the build.</p>
<ul>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/483" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra + @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/497" rel="noopener noreferrer">use musl binaries in installers</a></li>
</ul>
</li>
</ul>
<h3>msvc-crt-static opt-out</h3>
<p>cargo-dist has <a href="https://github.com/rust-lang/rfcs/blob/master/text/1721-crt-static.md" rel="noopener noreferrer">always forced +crt-static on, as it is considered more correct for targetting Windows with the typical statically linked Rust binary</a>. However with the introduction of initial support for chocolatey as a system package manager, it's now very easy for our users to dynamically link other DLLs. Once you do, <a href="https://github.com/axodotdev/cargo-dist/issues/496" rel="noopener noreferrer">it once again becomes more correct to dynamically link the windows crt, and to use systems like Visual C(++) Redistributables</a>.</p>
<p>Although we <a href="https://github.com/axodotdev/cargo-dist/issues/496" rel="noopener noreferrer">would like to teach cargo-dist to handle redistributables for you</a>, we're starting with a simple escape hatch: if you set <code>msvc-crt-static = false</code> in <code>[workspace.metadata.dist]</code>, we'll revert to the typical Rust behaviour of dynamically linking the CRT.</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/507" rel="noopener noreferrer">impl</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#msvc-crt-static" rel="noopener noreferrer">docs</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.4.0-prerelease.1</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.4.0-prerelease.1</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.4.0-prerelease.1</guid><content:encoded><![CDATA[<p>This release contains several major features related to package dependencies. cargo-dist can now install dependencies for you in CI, ensure your users have those dependencies in their installers, and provide you insights into what external libraries your package links against! It also enables support for statically-built musl binaries on Linux.</p>
<h2>Features</h2>
<h3>Install custom dependencies</h3>
<p>Way back in our <a href="https://blog.axo.dev/2023/02/cargo-dist" rel="noopener noreferrer">very first blog post</a>, we wrote about how users could customize the GitHub CI scripts we output to install custom dependencies. As of cargo-dist 0.4.0, you won't need to do that anymore! System dependencies — that is, dependencies installed via the system's package manager instead of <code>cargo</code> — can now be specified in your cargo-dist config in <code>Cargo.toml</code> using a syntax very similar to how your <code>cargo</code> dependencies are specified. For example:</p>
<pre style="background-color:#263238;"><span style="color:#89ddff;">[workspace.metadata.dist.dependencies.homebrew]
</span><span style="color:#f07178;">cmake </span><span style="color:#89ddff;">= { </span><span style="color:#f07178;">targets </span><span style="color:#89ddff;">= ["</span><span style="color:#c3e88d;">x86_64-apple-darwin</span><span style="color:#89ddff;">"] }
</span><span style="color:#f07178;">libcue </span><span style="color:#89ddff;">= "</span><span style="color:#c3e88d;">2.2.1</span><span style="color:#89ddff;">"
</span><span style="color:#eeffff;">
</span><span style="color:#89ddff;">[workspace.metadata.dist.dependencies.apt]
</span><span style="color:#f07178;">cmake </span><span style="color:#89ddff;">= '</span><span style="color:#c3e88d;">*</span><span style="color:#89ddff;">'
</span><span style="color:#f07178;">libcue-dev </span><span style="color:#89ddff;">= { </span><span style="color:#f07178;">version </span><span style="color:#89ddff;">= "</span><span style="color:#c3e88d;">2.2.1-2</span><span style="color:#89ddff;">" }
</span></pre>

<p>For more information, see the <a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#dependencies" rel="noopener noreferrer">documentation</a>.</p>
<ul>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/428" rel="noopener noreferrer">initial impl</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/504" rel="noopener noreferrer">improve Homebrew integration</a></li>
</ul>
</li>
</ul>
<h3>Find out what your builds linked against</h3>
<p>Complementing the ability to specify system dependencies, we've added a new feature that lets you tell which libraries your Rust programs have dynamically linked against. While most Rust software is statically linked, installing external dependencies may mean that your software links against something on the system; you can visualize which libraries your software uses, and which packages they come from, by viewing the output of the build step in CI.</p>
<p>In addition, cargo-dist now uses this information to choose which dependencies to specify when building system package manager installers such as a Homebrew formula. If cargo-dist detects that your binary links against a package provided by Homebrew, it will ensure that a user who <code>brew install</code>s your package will also get that other package.</p>
<p>This feature has full support for macOS and Linux. On Windows, we're not able to list which package a system library comes.</p>
<ul>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/426" rel="noopener noreferrer">initial impl</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/475" rel="noopener noreferrer">infer dependencies via linkage</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/474" rel="noopener noreferrer">fetch full name of Homebrew tap</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/495" rel="noopener noreferrer">improve apt package resolution</a></li>
</ul>
</li>
</ul>
<h3>musl support</h3>
<p>This release adds support for a long-requested feature, creating Linux binaries statically linked against musl instead of glibc. These can be enabled adding the <code>x86_64-unknown-linux-musl</code> target triple to your list of desired targets.</p>
<p>Note that because these binaries are statically linked, they cannot dynamically link against any other C libraries — including C libraries installed using the system dependency feature mentioned above. If your software links against system libraries, please ensure that a static library is available to the build.</p>
<ul>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/483" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra + @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/497" rel="noopener noreferrer">use musl binaries in installers</a></li>
</ul>
</li>
</ul>
<h3>msvc-crt-static opt-out</h3>
<p>cargo-dist has <a href="https://github.com/rust-lang/rfcs/blob/master/text/1721-crt-static.md" rel="noopener noreferrer">always forced +crt-static on, as it is considered more correct for targetting Windows with the typical statically linked Rust binary</a>. However with the introduction of initial support for chocolatey as a system package manager, it's now very easy for our users to dynamically link other DLLs. Once you do, <a href="https://github.com/axodotdev/cargo-dist/issues/496" rel="noopener noreferrer">it once again becomes more correct to dynamically link the windows crt, and to use systems like Visual C(++) Redistributables</a>.</p>
<p>Although we <a href="https://github.com/axodotdev/cargo-dist/issues/496" rel="noopener noreferrer">would like to teach cargo-dist to handle redistributables for you</a>, we're starting with a simple escape hatch: if you set <code>msvc-crt-static = false</code> in <code>[workspace.metadata.dist]</code>, we'll revert to the typical Rust behaviour of dynamically linking the CRT.</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/507" rel="noopener noreferrer">impl</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#msvc-crt-static" rel="noopener noreferrer">docs</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.3.1 (2023-09-28)</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.3.1</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.3.1</guid><content:encoded><![CDATA[<p>This is a minor bugfix release which fixes an issue certain builds would encounter on Windows.</p>
<h2>Fixes</h2>
<h3>Windows builds run under Powershell</h3>
<p>Starting in version 0.3.0, we switched Windows builds to run under bash instead of Powershell. This introduced problems for certain builds, so we've switched them back to Powershell.</p>
<p>The majority of users will not be affected by this and will not need to upgrade; this primarily affects a limited number of users building software with libraries or dependencies which are sensitive to the shell in which they're built. For example, users building OpenSSL on Windows as a part of their cargo-dist build may have been affected.</p>
<ul>
<li>@frol + @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/461" rel="noopener noreferrer">impl</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.3.0 (2023-09-27)</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.3.0</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.3.0</guid><content:encoded><![CDATA[<p>This release is a big overhaul of cargo-dist's UX! <a href="https://opensource.axo.dev/cargo-dist/book/introduction.html#distributing" rel="noopener noreferrer">Our CI scripts have been completely redesigned</a> to allow your release process to be tested in pull-requests, so you don't have to worry as much about your release process breaking!</p>
<p>Since we can now test your release process frequently, we've also made most cargo-dist commands default to erroring out if anything is out of sync and needs to be regenerated.</p>
<p>To make this easier, we've also introduced an experimental new system for <a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html#custom-jobs" rel="noopener noreferrer">user-defined hooks</a>, allowing you to write custom publish jobs without having to actually edit release.yml.</p>
<p>This release also introduces initial support for msi installers with the wonderful help of <a href="https://github.com/volks73/cargo-wix" rel="noopener noreferrer">cargo-wix</a>!</p>
<h2>Features</h2>
<h3>CI redesign</h3>
<p>This is the big ticket item of the release, the CI has been completely redesigned! We recommend reading the docs below for details, but some high-level details:</p>
<ul>
<li>
<p>The CI now runs <code>cargo dist plan</code> on pull-requests</p>
</li>
<li>
<p>This can be cranked up to <code>cargo dist build</code>, with results uploaded to the PR workflow, allowing you to download+test them</p>
</li>
<li>
<p>To do this, we now use GitHub's upload-artifact/download-artifact system, instead of using a draft GitHub release as scratch storage</p>
</li>
<li>
<p>This means we also no longer create a draft Release on startup, and instead transactionally create the full Release at the very end</p>
</li>
<li>
<p><code>cargo dist plan</code> will now check that the CI script is up to date and not hand-edited (can be opted out)</p>
<ul>
<li>The user-defined publish jobs feature helps you avoid hand-edits</li>
<li>More such features are in the pipeline for the next release!</li>
</ul>
</li>
<li>
<p>impl</p>
<ul>
<li>@mistydemeo + @gankra <a href="https://github.com/axodotdev/cargo-dist/pull/378" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/392" rel="noopener noreferrer">cleanup init logic</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/442" rel="noopener noreferrer">use checkout@v4</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/443" rel="noopener noreferrer">add docs</a></li>
</ul>
</li>
<li>
<p>docs</p>
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/introduction.html#distributing" rel="noopener noreferrer">high-level summary</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html" rel="noopener noreferrer">detailed docs</a></li>
</ul>
</li>
</ul>
<h3>user-defined publish jobs</h3>
<p>You can now define custom hand-written publish jobs that cargo-dist's CI will know how to invoke, without actually having to hand-edit release.yml!</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/417" rel="noopener noreferrer">impl</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html#custom-jobs" rel="noopener noreferrer">docs</a></li>
</ul>
<h3>default to not publishing prereleases to homebrew</h3>
<p>Homebrew doesn't have a notion of package "versions", there is Only The Latest Version, so we changed the default to only publishing to your homebrew tap if you're cutting a stable release. You can opt back in to the old behaviour with <code>publish-prereleases = true</code>.</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/401" rel="noopener noreferrer">impl</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#publish-prereleases" rel="noopener noreferrer">docs</a></li>
</ul>
<h3>generate command</h3>
<p>This feature is a bit of an internal affair that you don't necessarily need to care about, but it's big enough that we figured it's worth mentioning.</p>
<p>The "plumbing" <code>generate-ci</code> command which is invoked by <code>cargo dist init</code> has been reworked into a more general <code>generate</code> command, as the introduction of msi installers means we now have two kinds of checked-in generated output.</p>
<p>Most notably, <code>generate --check</code> now exists, which produces an error if <code>generate</code> would change the contents (ignoring newline-style). <strong>Most cargo-dist commands now run <code>generate --check</code> on startup, making it an error to have your release.yml out of date or hand-edited</strong>. This is a key piece to the puzzle of the new CI design, as it lets you catch issues with your release process in PRs.</p>
<p>The <code>allow-dirty = ["ci"]</code> config was introduced to disable these <code>generate</code> modifying or checking release.yml, for users that still really need to hand-edit. We're actively working on several features that should make it less necessary to do hand-edits.</p>
<ul>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/381" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/391" rel="noopener noreferrer">generalize for msi</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/397" rel="noopener noreferrer">improved --allow-dirty behaviour</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/410" rel="noopener noreferrer">default to --artifacts=all in generate</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/414" rel="noopener noreferrer">ignore newline style when checking file equality</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/434" rel="noopener noreferrer">hide generate-ci alias command</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/444" rel="noopener noreferrer">cleanup more references to generate-ci</a></li>
</ul>
</li>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/cli.html#cargo-dist-generate" rel="noopener noreferrer">generate cli command</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#allow-dirty" rel="noopener noreferrer">allow-dirty config</a></li>
</ul>
</li>
</ul>
<h3>msi installer</h3>
<p>Initial msi installer support is here, based on the wonderful <a href="https://volks73.github.io/cargo-wix/cargo_wix/" rel="noopener noreferrer">cargo-wix</a>. We contributed several upstream improvements to cargo-wix for our purposes, and look forward to helping out even more in the future!</p>
<ul>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/370" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/421" rel="noopener noreferrer">properly handle multiple subscribers to a binary</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/418" rel="noopener noreferrer">don't forward WiX output to stdout</a></li>
</ul>
</li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/installers/msi.html" rel="noopener noreferrer">docs</a></li>
</ul>
<h2>Fixes</h2>
<h3>more useful checksum files</h3>
<p>The checksum files we generate are now in the expected format for tools like sha256sum, making them more immediately useful.</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/420" rel="noopener noreferrer">impl</a></li>
</ul>
<h2>Maintenance</h2>
<h3>more polished cli output</h3>
<p>CLI Output has been streamlined and cleaned up a lot in this release!</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/411" rel="noopener noreferrer">remove redundant output</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/437" rel="noopener noreferrer">various improvements</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/447" rel="noopener noreferrer">better help diagnostics</a></li>
</ul>
<h3>refreshed docs</h3>
<p>The docs have been significantly reworked to reflect how much cargo-dist has changed and improved over the last few releases. Installers have rapidly grown from "something we're trying out" to "the star of the show", so they're now front-and-center with room for their own guides.</p>
<p>This was a big undertaking, and not everything has been reworked yet. Further improvements will be done more incrementally.</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/451" rel="noopener noreferrer">big docs overhaul</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/404" rel="noopener noreferrer">don't suggest --profile in install instructions</a></li>
<li>@tshepang <a href="https://github.com/axodotdev/cargo-dist/pull/386" rel="noopener noreferrer">make search more useful</a></li>
<li>@tshepang <a href="https://github.com/axodotdev/cargo-dist/pull/388" rel="noopener noreferrer">remove stray char</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.3.0-prerelease.9</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.3.0-prerelease.9</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.3.0-prerelease.9</guid><content:encoded><![CDATA[<p>This release is a big overhaul of cargo-dist's UX! <a href="https://opensource.axo.dev/cargo-dist/book/introduction.html#distributing" rel="noopener noreferrer">Our CI scripts have been completely redesigned</a> to allow your release process to be tested in pull-requests, so you don't have to worry as much about your release process breaking!</p>
<p>Since we can now test your release process frequently, we've also made most cargo-dist commands default to erroring out if anything is out of sync and needs to be regenerated.</p>
<p>To make this easier, we've also introduced an experimental new system for <a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html#custom-jobs" rel="noopener noreferrer">user-defined hooks</a>, allowing you to write custom publish jobs without having to actually edit release.yml.</p>
<p>This release also introduces initial support for msi installers with the wonderful help of <a href="https://github.com/volks73/cargo-wix" rel="noopener noreferrer">cargo-wix</a>!</p>
<h2>Features</h2>
<h3>CI redesign</h3>
<p>This is the big ticket item of the release, the CI has been completely redesigned! We recommend reading the docs below for details, but some high-level details:</p>
<ul>
<li>
<p>The CI now runs <code>cargo dist plan</code> on pull-requests</p>
</li>
<li>
<p>This can be cranked up to <code>cargo dist build</code>, with results uploaded to the PR workflow, allowing you to download+test them</p>
</li>
<li>
<p>To do this, we now use GitHub's upload-artifact/download-artifact system, instead of using a draft GitHub release as scratch storage</p>
</li>
<li>
<p>This means we also no longer create a draft Release on startup, and instead transactionally create the full Release at the very end</p>
</li>
<li>
<p><code>cargo dist plan</code> will now check that the CI script is up to date and not hand-edited (can be opted out)</p>
<ul>
<li>The user-defined publish jobs feature helps you avoid hand-edits</li>
<li>More such features are in the pipeline for the next release!</li>
</ul>
</li>
<li>
<p>impl</p>
<ul>
<li>@mistydemeo + @gankra <a href="https://github.com/axodotdev/cargo-dist/pull/378" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/392" rel="noopener noreferrer">cleanup init logic</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/442" rel="noopener noreferrer">use checkout@v4</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/443" rel="noopener noreferrer">add docs</a></li>
</ul>
</li>
<li>
<p>docs</p>
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/introduction.html#distributing" rel="noopener noreferrer">high-level summary</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html" rel="noopener noreferrer">detailed docs</a></li>
</ul>
</li>
</ul>
<h3>user-defined publish jobs</h3>
<p>You can now define custom hand-written publish jobs that cargo-dist's CI will know how to invoke, without actually having to hand-edit release.yml!</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/417" rel="noopener noreferrer">impl</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html#custom-jobs" rel="noopener noreferrer">docs</a></li>
</ul>
<h3>default to not publishing prereleases to homebrew</h3>
<p>Homebrew doesn't have a notion of package "versions", there is Only The Latest Version, so we changed the default to only publishing to your homebrew tap if you're cutting a stable release. You can opt back in to the old behaviour with <code>publish-prereleases = true</code>.</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/401" rel="noopener noreferrer">impl</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#publish-prereleases" rel="noopener noreferrer">docs</a></li>
</ul>
<h3>generate command</h3>
<p>This feature is a bit of an internal affair that you don't necessarily need to care about, but it's big enough that we figured it's worth mentioning.</p>
<p>The "plumbing" <code>generate-ci</code> command which is invoked by <code>cargo dist init</code> has been reworked into a more general <code>generate</code> command, as the introduction of msi installers means we now have two kinds of checked-in generated output.</p>
<p>Most notably, <code>generate --check</code> now exists, which produces an error if <code>generate</code> would change the contents (ignoring newline-style). <strong>Most cargo-dist commands now run <code>generate --check</code> on startup, making it an error to have your release.yml out of date or hand-edited</strong>. This is a key piece to the puzzle of the new CI design, as it lets you catch issues with your release process in PRs.</p>
<p>The <code>allow-dirty = ["ci"]</code> config was introduced to disable these <code>generate</code> modifying or checking release.yml, for users that still really need to hand-edit. We're actively working on several features that should make it less necessary to do hand-edits.</p>
<ul>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/381" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/391" rel="noopener noreferrer">generalize for msi</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/397" rel="noopener noreferrer">improved --allow-dirty behaviour</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/410" rel="noopener noreferrer">default to --artifacts=all in generate</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/414" rel="noopener noreferrer">ignore newline style when checking file equality</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/434" rel="noopener noreferrer">hide generate-ci alias command</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/444" rel="noopener noreferrer">cleanup more references to generate-ci</a></li>
</ul>
</li>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/cli.html#cargo-dist-generate" rel="noopener noreferrer">generate cli command</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#allow-dirty" rel="noopener noreferrer">allow-dirty config</a></li>
</ul>
</li>
</ul>
<h3>msi installer</h3>
<p>Initial msi installer support is here, based on the wonderful <a href="https://volks73.github.io/cargo-wix/cargo_wix/" rel="noopener noreferrer">cargo-wix</a>. We contributed several upstream improvements to cargo-wix for our purposes, and look forward to helping out even more in the future!</p>
<ul>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/370" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/421" rel="noopener noreferrer">properly handle multiple subscribers to a binary</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/418" rel="noopener noreferrer">don't forward WiX output to stdout</a></li>
</ul>
</li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/installers/msi.html" rel="noopener noreferrer">docs</a></li>
</ul>
<h2>Fixes</h2>
<h3>more useful checksum files</h3>
<p>The checksum files we generate are now in the expected format for tools like sha256sum, making them more immediately useful.</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/420" rel="noopener noreferrer">impl</a></li>
</ul>
<h2>Maintenance</h2>
<h3>more polished cli output</h3>
<p>CLI Output has been streamlined and cleaned up a lot in this release!</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/411" rel="noopener noreferrer">remove redundant output</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/437" rel="noopener noreferrer">various improvements</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/447" rel="noopener noreferrer">better help diagnostics</a></li>
</ul>
<h3>refreshed docs</h3>
<p>The docs have been significantly reworked to reflect how much cargo-dist has changed and improved over the last few releases. Installers have rapidly grown from "something we're trying out" to "the star of the show", so they're now front-and-center with room for their own guides.</p>
<p>This was a big undertaking, and not everything has been reworked yet. Further improvements will be done more incrementally.</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/451" rel="noopener noreferrer">big docs overhaul</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/404" rel="noopener noreferrer">don't suggest --profile in install instructions</a></li>
<li>@tshepang <a href="https://github.com/axodotdev/cargo-dist/pull/386" rel="noopener noreferrer">make search more useful</a></li>
<li>@tshepang <a href="https://github.com/axodotdev/cargo-dist/pull/388" rel="noopener noreferrer">remove stray char</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.3.0-prerelease.8</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.3.0-prerelease.8</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.3.0-prerelease.8</guid><content:encoded><![CDATA[<p>This release is a big overhaul of cargo-dist's UX! <a href="https://opensource.axo.dev/cargo-dist/book/introduction.html#distributing" rel="noopener noreferrer">Our CI scripts have been completely redesigned</a> to allow your release process to be tested in pull-requests, so you don't have to worry as much about your release process breaking!</p>
<p>Since we can now test your release process frequently, we've also made most cargo-dist commands default to erroring out if anything is out of sync and needs to be regenerated.</p>
<p>To make this easier, we've also introduced an experimental new system for <a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html#custom-jobs" rel="noopener noreferrer">user-defined hooks</a>, allowing you to write custom publish jobs without having to actually edit release.yml.</p>
<p>This release also introduces initial support for msi installers with the wonderful help of <a href="https://github.com/volks73/cargo-wix" rel="noopener noreferrer">cargo-wix</a>!</p>
<h2>Features</h2>
<h3>CI redesign</h3>
<p>This is the big ticket item of the release, the CI has been completely redesigned! We recommend reading the docs below for details, but some high-level details:</p>
<ul>
<li>
<p>The CI now runs <code>cargo dist plan</code> on pull-requests</p>
</li>
<li>
<p>This can be cranked up to <code>cargo dist build</code>, with results uploaded to the PR workflow, allowing you to download+test them</p>
</li>
<li>
<p>To do this, we now use GitHub's upload-artifact/download-artifact system, instead of using a draft GitHub release as scratch storage</p>
</li>
<li>
<p>This means we also no longer create a draft Release on startup, and instead transactionally create the full Release at the very end</p>
</li>
<li>
<p><code>cargo dist plan</code> will now check that the CI script is up to date and not hand-edited (can be opted out)</p>
<ul>
<li>The user-defined publish jobs feature helps you avoid hand-edits</li>
<li>More such features are in the pipeline for the next release!</li>
</ul>
</li>
<li>
<p>impl</p>
<ul>
<li>@mistydemeo + @gankra <a href="https://github.com/axodotdev/cargo-dist/pull/378" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/392" rel="noopener noreferrer">cleanup init logic</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/442" rel="noopener noreferrer">use checkout@v4</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/443" rel="noopener noreferrer">add docs</a></li>
</ul>
</li>
<li>
<p>docs</p>
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/introduction.html#distributing" rel="noopener noreferrer">high-level summary</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html" rel="noopener noreferrer">detailed docs</a></li>
</ul>
</li>
</ul>
<h3>user-defined publish jobs</h3>
<p>You can now define custom hand-written publish jobs that cargo-dist's CI will know how to invoke, without actually having to hand-edit release.yml!</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/417" rel="noopener noreferrer">impl</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html#custom-jobs" rel="noopener noreferrer">docs</a></li>
</ul>
<h3>default to not publishing prereleases to homebrew</h3>
<p>Homebrew doesn't have a notion of package "versions", there is Only The Latest Version, so we changed the default to only publishing to your homebrew tap if you're cutting a stable release. You can opt back in to the old behaviour with <code>publish-prereleases = true</code>.</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/401" rel="noopener noreferrer">impl</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#publish-prereleases" rel="noopener noreferrer">docs</a></li>
</ul>
<h3>generate command</h3>
<p>This feature is a bit of an internal affair that you don't necessarily need to care about, but it's big enough that we figured it's worth mentioning.</p>
<p>The "plumbing" <code>generate-ci</code> command which is invoked by <code>cargo dist init</code> has been reworked into a more general <code>generate</code> command, as the introduction of msi installers means we now have two kinds of checked-in generated output.</p>
<p>Most notably, <code>generate --check</code> now exists, which produces an error if <code>generate</code> would change the contents (ignoring newline-style). <strong>Most cargo-dist commands now run <code>generate --check</code> on startup, making it an error to have your release.yml out of date or hand-edited</strong>. This is a key piece to the puzzle of the new CI design, as it lets you catch issues with your release process in PRs.</p>
<p>The <code>allow-dirty = ["ci"]</code> config was introduced to disable these <code>generate</code> modifying or checking release.yml, for users that still really need to hand-edit. We're actively working on several features that should make it less necessary to do hand-edits.</p>
<ul>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/381" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/391" rel="noopener noreferrer">generalize for msi</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/397" rel="noopener noreferrer">improved --allow-dirty behaviour</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/410" rel="noopener noreferrer">default to --artifacts=all in generate</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/414" rel="noopener noreferrer">ignore newline style when checking file equality</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/434" rel="noopener noreferrer">hide generate-ci alias command</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/444" rel="noopener noreferrer">cleanup more references to generate-ci</a></li>
</ul>
</li>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/cli.html#cargo-dist-generate" rel="noopener noreferrer">generate cli command</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#allow-dirty" rel="noopener noreferrer">allow-dirty config</a></li>
</ul>
</li>
</ul>
<h3>msi installer</h3>
<p>Initial msi installer support is here, based on the wonderful <a href="https://volks73.github.io/cargo-wix/cargo_wix/" rel="noopener noreferrer">cargo-wix</a>. We contributed several upstream improvements to cargo-wix for our purposes, and look forward to helping out even more in the future!</p>
<ul>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/370" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/421" rel="noopener noreferrer">properly handle multiple subscribers to a binary</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/418" rel="noopener noreferrer">don't forward WiX output to stdout</a></li>
</ul>
</li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/installers/msi.html" rel="noopener noreferrer">docs</a></li>
</ul>
<h2>Fixes</h2>
<h3>more useful checksum files</h3>
<p>The checksum files we generate are now in the expected format for tools like sha256sum, making them more immediately useful.</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/420" rel="noopener noreferrer">impl</a></li>
</ul>
<h2>Maintenance</h2>
<h3>more polished cli output</h3>
<p>CLI Output has been streamlined and cleaned up a lot in this release!</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/411" rel="noopener noreferrer">remove redundant output</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/437" rel="noopener noreferrer">various improvements</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/447" rel="noopener noreferrer">better help diagnostics</a></li>
</ul>
<h3>refreshed docs</h3>
<p>The docs have been significantly reworked to reflect how much cargo-dist has changed and improved over the last few releases. Installers have rapidly grown from "something we're trying out" to "the star of the show", so they're now front-and-center with room for their own guides.</p>
<p>This was a big undertaking, and not everything has been reworked yet. Further improvements will be done more incrementally.</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/451" rel="noopener noreferrer">big docs overhaul</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/404" rel="noopener noreferrer">don't suggest --profile in install instructions</a></li>
<li>@tshepang <a href="https://github.com/axodotdev/cargo-dist/pull/386" rel="noopener noreferrer">make search more useful</a></li>
<li>@tshepang <a href="https://github.com/axodotdev/cargo-dist/pull/388" rel="noopener noreferrer">remove stray char</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.3.0-prerelease.7</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.3.0-prerelease.7</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.3.0-prerelease.7</guid><content:encoded><![CDATA[<p>This release is a big overhaul of cargo-dist's UX! <a href="https://opensource.axo.dev/cargo-dist/book/introduction.html#distributing" rel="noopener noreferrer">Our CI scripts have been completely redesigned</a> to allow your release process to be tested in pull-requests, so you don't have to worry as much about your release process breaking!</p>
<p>Since we can now test your release process frequently, we've also made most cargo-dist commands default to erroring out if anything is out of sync and needs to be regenerated.</p>
<p>To make this easier, we've also introduced an experimental new system for <a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html#custom-jobs" rel="noopener noreferrer">user-defined hooks</a>, allowing you to write custom publish jobs without having to actually edit release.yml.</p>
<p>This release also introduces initial support for msi installers with the wonderful help of <a href="https://github.com/volks73/cargo-wix" rel="noopener noreferrer">cargo-wix</a>!</p>
<h2>Features</h2>
<h3>CI redesign</h3>
<p>This is the big ticket item of the release, the CI has been completely redesigned! We recommend reading the docs below for details, but some high-level details:</p>
<ul>
<li>
<p>The CI now runs <code>cargo dist plan</code> on pull-requests</p>
</li>
<li>
<p>This can be cranked up to <code>cargo dist build</code>, with results uploaded to the PR workflow, allowing you to download+test them</p>
</li>
<li>
<p>To do this, we now use GitHub's upload-artifact/download-artifact system, instead of using a draft GitHub release as scratch storage</p>
</li>
<li>
<p>This means we also no longer create a draft Release on startup, and instead transactionally create the full Release at the very end</p>
</li>
<li>
<p><code>cargo dist plan</code> will now check that the CI script is up to date and not hand-edited (can be opted out)</p>
<ul>
<li>The user-defined publish jobs feature helps you avoid hand-edits</li>
<li>More such features are in the pipeline for the next release!</li>
</ul>
</li>
<li>
<p>impl</p>
<ul>
<li>@mistydemeo + @gankra <a href="https://github.com/axodotdev/cargo-dist/pull/378" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/392" rel="noopener noreferrer">cleanup init logic</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/442" rel="noopener noreferrer">use checkout@v4</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/443" rel="noopener noreferrer">add docs</a></li>
</ul>
</li>
<li>
<p>docs</p>
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/introduction.html#distributing" rel="noopener noreferrer">high-level summary</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html" rel="noopener noreferrer">detailed docs</a></li>
</ul>
</li>
</ul>
<h3>user-defined publish jobs</h3>
<p>You can now define custom hand-written publish jobs that cargo-dist's CI will know how to invoke, without actually having to hand-edit release.yml!</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/417" rel="noopener noreferrer">impl</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html#custom-jobs" rel="noopener noreferrer">docs</a></li>
</ul>
<h3>default to not publishing prereleases to homebrew</h3>
<p>Homebrew doesn't have a notion of package "versions", there is Only The Latest Version, so we changed the default to only publishing to your homebrew tap if you're cutting a stable release. You can opt back in to the old behaviour with <code>publish-prereleases = true</code>.</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/401" rel="noopener noreferrer">impl</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#publish-prereleases" rel="noopener noreferrer">docs</a></li>
</ul>
<h3>generate command</h3>
<p>This feature is a bit of an internal affair that you don't necessarily need to care about, but it's big enough that we figured it's worth mentioning.</p>
<p>The "plumbing" <code>generate-ci</code> command which is invoked by <code>cargo dist init</code> has been reworked into a more general <code>generate</code> command, as the introduction of msi installers means we now have two kinds of checked-in generated output.</p>
<p>Most notably, <code>generate --check</code> now exists, which produces an error if <code>generate</code> would change the contents (ignoring newline-style). <strong>Most cargo-dist commands now run <code>generate --check</code> on startup, making it an error to have your release.yml out of date or hand-edited</strong>. This is a key piece to the puzzle of the new CI design, as it lets you catch issues with your release process in PRs.</p>
<p>The <code>allow-dirty = ["ci"]</code> config was introduced to disable these <code>generate</code> modifying or checking release.yml, for users that still really need to hand-edit. We're actively working on several features that should make it less necessary to do hand-edits.</p>
<ul>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/381" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/391" rel="noopener noreferrer">generalize for msi</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/397" rel="noopener noreferrer">improved --allow-dirty behaviour</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/410" rel="noopener noreferrer">default to --artifacts=all in generate</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/414" rel="noopener noreferrer">ignore newline style when checking file equality</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/434" rel="noopener noreferrer">hide generate-ci alias command</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/444" rel="noopener noreferrer">cleanup more references to generate-ci</a></li>
</ul>
</li>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/cli.html#cargo-dist-generate" rel="noopener noreferrer">generate cli command</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#allow-dirty" rel="noopener noreferrer">allow-dirty config</a></li>
</ul>
</li>
</ul>
<h3>msi installer</h3>
<p>Initial msi installer support is here, based on the wonderful <a href="https://volks73.github.io/cargo-wix/cargo_wix/" rel="noopener noreferrer">cargo-wix</a>. We contributed several upstream improvements to cargo-wix for our purposes, and look forward to helping out even more in the future!</p>
<ul>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/370" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/421" rel="noopener noreferrer">properly handle multiple subscribers to a binary</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/418" rel="noopener noreferrer">don't forward WiX output to stdout</a></li>
</ul>
</li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/installers/msi.html" rel="noopener noreferrer">docs</a></li>
</ul>
<h2>Fixes</h2>
<h3>more useful checksum files</h3>
<p>The checksum files we generate are now in the expected format for tools like sha256sum, making them more immediately useful.</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/420" rel="noopener noreferrer">impl</a></li>
</ul>
<h2>Maintenance</h2>
<h3>more polished cli output</h3>
<p>CLI Output has been streamlined and cleaned up a lot in this release!</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/411" rel="noopener noreferrer">remove redundant output</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/437" rel="noopener noreferrer">various improvements</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/447" rel="noopener noreferrer">better help diagnostics</a></li>
</ul>
<h3>refreshed docs</h3>
<p>The docs have been significantly reworked to reflect how much cargo-dist has changed and improved over the last few releases. Installers have rapidly grown from "something we're trying out" to "the star of the show", so they're now front-and-center with room for their own guides.</p>
<p>This was a big undertaking, and not everything has been reworked yet. Further improvements will be done more incrementally.</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/451" rel="noopener noreferrer">big docs overhaul</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/404" rel="noopener noreferrer">don't suggest --profile in install instructions</a></li>
<li>@tshepang <a href="https://github.com/axodotdev/cargo-dist/pull/386" rel="noopener noreferrer">make search more useful</a></li>
<li>@tshepang <a href="https://github.com/axodotdev/cargo-dist/pull/388" rel="noopener noreferrer">remove stray char</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.3.0-prerelease.6</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.3.0-prerelease.6</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.3.0-prerelease.6</guid><content:encoded><![CDATA[<p>This release is a big overhaul of cargo-dist's UX! <a href="https://opensource.axo.dev/cargo-dist/book/introduction.html#distributing" rel="noopener noreferrer">Our CI scripts have been completely redesigned</a> to allow your release process to be tested in pull-requests, so you don't have to worry as much about your release process breaking!</p>
<p>Since we can now test your release process frequently, we've also made most cargo-dist commands default to erroring out if anything is out of sync and needs to be regenerated.</p>
<p>To make this easier, we've also introduced an experimental new system for <a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html#custom-jobs" rel="noopener noreferrer">user-defined hooks</a>, allowing you to write custom publish jobs without having to actually edit release.yml.</p>
<p>This release also introduces initial support for msi installers with the wonderful help of <a href="https://github.com/volks73/cargo-wix" rel="noopener noreferrer">cargo-wix</a>!</p>
<h2>Features</h2>
<h3>CI redesign</h3>
<p>This is the big ticket item of the release, the CI has been completely redesigned! We recommend reading the docs below for details, but some high-level details:</p>
<ul>
<li>
<p>The CI now runs <code>cargo dist plan</code> on pull-requests</p>
</li>
<li>
<p>This can be cranked up to <code>cargo dist build</code>, with results uploaded to the PR workflow, allowing you to download+test them</p>
</li>
<li>
<p>To do this, we now use GitHub's upload-artifact/download-artifact system, instead of using a draft GitHub release as scratch storage</p>
</li>
<li>
<p>This means we also no longer create a draft Release on startup, and instead transactionally create the full Release at the very end</p>
</li>
<li>
<p><code>cargo dist plan</code> will now check that the CI script is up to date and not hand-edited (can be opted out)</p>
<ul>
<li>The user-defined publish jobs feature helps you avoid hand-edits</li>
<li>More such features are in the pipeline for the next release!</li>
</ul>
</li>
<li>
<p>impl</p>
<ul>
<li>@mistydemeo + @gankra <a href="https://github.com/axodotdev/cargo-dist/pull/378" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/392" rel="noopener noreferrer">cleanup init logic</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/442" rel="noopener noreferrer">use checkout@v4</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/443" rel="noopener noreferrer">add docs</a></li>
</ul>
</li>
<li>
<p>docs</p>
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/introduction.html#distributing" rel="noopener noreferrer">high-level summary</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html" rel="noopener noreferrer">detailed docs</a></li>
</ul>
</li>
</ul>
<h3>user-defined publish jobs</h3>
<p>You can now define custom hand-written publish jobs that cargo-dist's CI will know how to invoke, without actually having to hand-edit release.yml!</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/417" rel="noopener noreferrer">impl</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html#custom-jobs" rel="noopener noreferrer">docs</a></li>
</ul>
<h3>default to not publishing prereleases to homebrew</h3>
<p>Homebrew doesn't have a notion of package "versions", there is Only The Latest Version, so we changed the default to only publishing to your homebrew tap if you're cutting a stable release. You can opt back in to the old behaviour with <code>publish-prereleases = true</code>.</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/401" rel="noopener noreferrer">impl</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#publish-prereleases" rel="noopener noreferrer">docs</a></li>
</ul>
<h3>generate command</h3>
<p>This feature is a bit of an internal affair that you don't necessarily need to care about, but it's big enough that we figured it's worth mentioning.</p>
<p>The "plumbing" <code>generate-ci</code> command which is invoked by <code>cargo dist init</code> has been reworked into a more general <code>generate</code> command, as the introduction of msi installers means we now have two kinds of checked-in generated output.</p>
<p>Most notably, <code>generate --check</code> now exists, which produces an error if <code>generate</code> would change the contents (ignoring newline-style). <strong>Most cargo-dist commands now run <code>generate --check</code> on startup, making it an error to have your release.yml out of date or hand-edited</strong>. This is a key piece to the puzzle of the new CI design, as it lets you catch issues with your release process in PRs.</p>
<p>The <code>allow-dirty = ["ci"]</code> config was introduced to disable these <code>generate</code> modifying or checking release.yml, for users that still really need to hand-edit. We're actively working on several features that should make it less necessary to do hand-edits.</p>
<ul>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/381" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/391" rel="noopener noreferrer">generalize for msi</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/397" rel="noopener noreferrer">improved --allow-dirty behaviour</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/410" rel="noopener noreferrer">default to --artifacts=all in generate</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/414" rel="noopener noreferrer">ignore newline style when checking file equality</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/434" rel="noopener noreferrer">hide generate-ci alias command</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/444" rel="noopener noreferrer">cleanup more references to generate-ci</a></li>
</ul>
</li>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/cli.html#cargo-dist-generate" rel="noopener noreferrer">generate cli command</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#allow-dirty" rel="noopener noreferrer">allow-dirty config</a></li>
</ul>
</li>
</ul>
<h3>msi installer</h3>
<p>Initial msi installer support is here, based on the wonderful <a href="https://volks73.github.io/cargo-wix/cargo_wix/" rel="noopener noreferrer">cargo-wix</a>. We contributed several upstream improvements to cargo-wix for our purposes, and look forward to helping out even more in the future!</p>
<ul>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/370" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/421" rel="noopener noreferrer">properly handle multiple subscribers to a binary</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/418" rel="noopener noreferrer">don't forward WiX output to stdout</a></li>
</ul>
</li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/installers/msi.html" rel="noopener noreferrer">docs</a></li>
</ul>
<h2>Fixes</h2>
<h3>more useful checksum files</h3>
<p>The checksum files we generate are now in the expected format for tools like sha256sum, making them more immediately useful.</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/420" rel="noopener noreferrer">impl</a></li>
</ul>
<h2>Maintenance</h2>
<h3>more polished cli output</h3>
<p>CLI Output has been streamlined and cleaned up a lot in this release!</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/411" rel="noopener noreferrer">remove redundant output</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/437" rel="noopener noreferrer">various improvements</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/447" rel="noopener noreferrer">better help diagnostics</a></li>
</ul>
<h3>refreshed docs</h3>
<p>The docs have been significantly reworked to reflect how much cargo-dist has changed and improved over the last few releases. Installers have rapidly grown from "something we're trying out" to "the star of the show", so they're now front-and-center with room for their own guides.</p>
<p>This was a big undertaking, and not everything has been reworked yet. Further improvements will be done more incrementally.</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/451" rel="noopener noreferrer">big docs overhaul</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/404" rel="noopener noreferrer">don't suggest --profile in install instructions</a></li>
<li>@tshepang <a href="https://github.com/axodotdev/cargo-dist/pull/386" rel="noopener noreferrer">make search more useful</a></li>
<li>@tshepang <a href="https://github.com/axodotdev/cargo-dist/pull/388" rel="noopener noreferrer">remove stray char</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.3.0-prerelease.5</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.3.0-prerelease.5</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.3.0-prerelease.5</guid><content:encoded><![CDATA[<p>This release is a big overhaul of cargo-dist's UX! <a href="https://opensource.axo.dev/cargo-dist/book/introduction.html#distributing" rel="noopener noreferrer">Our CI scripts have been completely redesigned</a> to allow your release process to be tested in pull-requests, so you don't have to worry as much about your release process breaking!</p>
<p>Since we can now test your release process frequently, we've also made most cargo-dist commands default to erroring out if anything is out of sync and needs to be regenerated.</p>
<p>To make this easier, we've also introduced an experimental new system for <a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html#custom-jobs" rel="noopener noreferrer">user-defined hooks</a>, allowing you to write custom publish jobs without having to actually edit release.yml.</p>
<p>This release also introduces initial support for msi installers with the wonderful help of <a href="https://github.com/volks73/cargo-wix" rel="noopener noreferrer">cargo-wix</a>!</p>
<h2>Features</h2>
<h3>CI redesign</h3>
<p>This is the big ticket item of the release, the CI has been completely redesigned! We recommend reading the docs below for details, but some high-level details:</p>
<ul>
<li>
<p>The CI now runs <code>cargo dist plan</code> on pull-requests</p>
</li>
<li>
<p>This can be cranked up to <code>cargo dist build</code>, with results uploaded to the PR workflow, allowing you to download+test them</p>
</li>
<li>
<p>To do this, we now use GitHub's upload-artifact/download-artifact system, instead of using a draft GitHub release as scratch storage</p>
</li>
<li>
<p>This means we also no longer create a draft Release on startup, and instead transactionally create the full Release at the very end</p>
</li>
<li>
<p><code>cargo dist plan</code> will now check that the CI script is up to date and not hand-edited (can be opted out)</p>
<ul>
<li>The user-defined publish jobs feature helps you avoid hand-edits</li>
<li>More such features are in the pipeline for the next release!</li>
</ul>
</li>
<li>
<p>impl</p>
<ul>
<li>@mistydemeo + @gankra <a href="https://github.com/axodotdev/cargo-dist/pull/378" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/392" rel="noopener noreferrer">cleanup init logic</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/442" rel="noopener noreferrer">use checkout@v4</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/443" rel="noopener noreferrer">add docs</a></li>
</ul>
</li>
<li>
<p>docs</p>
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/introduction.html#distributing" rel="noopener noreferrer">high-level summary</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html" rel="noopener noreferrer">detailed docs</a></li>
</ul>
</li>
</ul>
<h3>user-defined publish jobs</h3>
<p>You can now define custom hand-written publish jobs that cargo-dist's CI will know how to invoke, without actually having to hand-edit release.yml!</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/417" rel="noopener noreferrer">impl</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html#custom-jobs" rel="noopener noreferrer">docs</a></li>
</ul>
<h3>default to not publishing prereleases to homebrew</h3>
<p>Homebrew doesn't have a notion of package "versions", there is Only The Latest Version, so we changed the default to only publishing to your homebrew tap if you're cutting a stable release. You can opt back in to the old behaviour with <code>publish-prereleases = true</code>.</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/401" rel="noopener noreferrer">impl</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#publish-prereleases" rel="noopener noreferrer">docs</a></li>
</ul>
<h3>generate command</h3>
<p>This feature is a bit of an internal affair that you don't necessarily need to care about, but it's big enough that we figured it's worth mentioning.</p>
<p>The "plumbing" <code>generate-ci</code> command which is invoked by <code>cargo dist init</code> has been reworked into a more general <code>generate</code> command, as the introduction of msi installers means we now have two kinds of checked-in generated output.</p>
<p>Most notably, <code>generate --check</code> now exists, which produces an error if <code>generate</code> would change the contents (ignoring newline-style). <strong>Most cargo-dist commands now run <code>generate --check</code> on startup, making it an error to have your release.yml out of date or hand-edited</strong>. This is a key piece to the puzzle of the new CI design, as it lets you catch issues with your release process in PRs.</p>
<p>The <code>allow-dirty = ["ci"]</code> config was introduced to disable these <code>generate</code> modifying or checking release.yml, for users that still really need to hand-edit. We're actively working on several features that should make it less necessary to do hand-edits.</p>
<ul>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/381" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/391" rel="noopener noreferrer">generalize for msi</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/397" rel="noopener noreferrer">improved --allow-dirty behaviour</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/410" rel="noopener noreferrer">default to --artifacts=all in generate</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/414" rel="noopener noreferrer">ignore newline style when checking file equality</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/434" rel="noopener noreferrer">hide generate-ci alias command</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/444" rel="noopener noreferrer">cleanup more references to generate-ci</a></li>
</ul>
</li>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/cli.html#cargo-dist-generate" rel="noopener noreferrer">generate cli command</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#allow-dirty" rel="noopener noreferrer">allow-dirty config</a></li>
</ul>
</li>
</ul>
<h3>msi installer</h3>
<p>Initial msi installer support is here, based on the wonderful <a href="https://volks73.github.io/cargo-wix/cargo_wix/" rel="noopener noreferrer">cargo-wix</a>. We contributed several upstream improvements to cargo-wix for our purposes, and look forward to helping out even more in the future!</p>
<ul>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/370" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/421" rel="noopener noreferrer">properly handle multiple subscribers to a binary</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/418" rel="noopener noreferrer">don't forward WiX output to stdout</a></li>
</ul>
</li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/installers/msi.html" rel="noopener noreferrer">docs</a></li>
</ul>
<h2>Fixes</h2>
<h3>more useful checksum files</h3>
<p>The checksum files we generate are now in the expected format for tools like sha256sum, making them more immediately useful.</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/420" rel="noopener noreferrer">impl</a></li>
</ul>
<h2>Maintenance</h2>
<h3>more polished cli output</h3>
<p>CLI Output has been streamlined and cleaned up a lot in this release!</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/411" rel="noopener noreferrer">remove redundant output</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/437" rel="noopener noreferrer">various improvements</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/447" rel="noopener noreferrer">better help diagnostics</a></li>
</ul>
<h3>refreshed docs</h3>
<p>The docs have been significantly reworked to reflect how much cargo-dist has changed and improved over the last few releases. Installers have rapidly grown from "something we're trying out" to "the star of the show", so they're now front-and-center with room for their own guides.</p>
<p>This was a big undertaking, and not everything has been reworked yet. Further improvements will be done more incrementally.</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/451" rel="noopener noreferrer">big docs overhaul</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/404" rel="noopener noreferrer">don't suggest --profile in install instructions</a></li>
<li>@tshepang <a href="https://github.com/axodotdev/cargo-dist/pull/386" rel="noopener noreferrer">make search more useful</a></li>
<li>@tshepang <a href="https://github.com/axodotdev/cargo-dist/pull/388" rel="noopener noreferrer">remove stray char</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.3.0-prerelease.4</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.3.0-prerelease.4</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.3.0-prerelease.4</guid><content:encoded><![CDATA[<p>This release is a big overhaul of cargo-dist's UX! <a href="https://opensource.axo.dev/cargo-dist/book/introduction.html#distributing" rel="noopener noreferrer">Our CI scripts have been completely redesigned</a> to allow your release process to be tested in pull-requests, so you don't have to worry as much about your release process breaking!</p>
<p>Since we can now test your release process frequently, we've also made most cargo-dist commands default to erroring out if anything is out of sync and needs to be regenerated.</p>
<p>To make this easier, we've also introduced an experimental new system for <a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html#custom-jobs" rel="noopener noreferrer">user-defined hooks</a>, allowing you to write custom publish jobs without having to actually edit release.yml.</p>
<p>This release also introduces initial support for msi installers with the wonderful help of <a href="https://github.com/volks73/cargo-wix" rel="noopener noreferrer">cargo-wix</a>!</p>
<h2>Features</h2>
<h3>CI redesign</h3>
<p>This is the big ticket item of the release, the CI has been completely redesigned! We recommend reading the docs below for details, but some high-level details:</p>
<ul>
<li>
<p>The CI now runs <code>cargo dist plan</code> on pull-requests</p>
</li>
<li>
<p>This can be cranked up to <code>cargo dist build</code>, with results uploaded to the PR workflow, allowing you to download+test them</p>
</li>
<li>
<p>To do this, we now use GitHub's upload-artifact/download-artifact system, instead of using a draft GitHub release as scratch storage</p>
</li>
<li>
<p>This means we also no longer create a draft Release on startup, and instead transactionally create the full Release at the very end</p>
</li>
<li>
<p><code>cargo dist plan</code> will now check that the CI script is up to date and not hand-edited (can be opted out)</p>
<ul>
<li>The user-defined publish jobs feature helps you avoid hand-edits</li>
<li>More such features are in the pipeline for the next release!</li>
</ul>
</li>
<li>
<p>impl</p>
<ul>
<li>@mistydemeo + @gankra <a href="https://github.com/axodotdev/cargo-dist/pull/378" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/392" rel="noopener noreferrer">cleanup init logic</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/442" rel="noopener noreferrer">use checkout@v4</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/443" rel="noopener noreferrer">add docs</a></li>
</ul>
</li>
<li>
<p>docs</p>
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/introduction.html#distributing" rel="noopener noreferrer">high-level summary</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html" rel="noopener noreferrer">detailed docs</a></li>
</ul>
</li>
</ul>
<h3>user-defined publish jobs</h3>
<p>You can now define custom hand-written publish jobs that cargo-dist's CI will know how to invoke, without actually having to hand-edit release.yml!</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/417" rel="noopener noreferrer">impl</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html#custom-jobs" rel="noopener noreferrer">docs</a></li>
</ul>
<h3>default to not publishing prereleases to homebrew</h3>
<p>Homebrew doesn't have a notion of package "versions", there is Only The Latest Version, so we changed the default to only publishing to your homebrew tap if you're cutting a stable release. You can opt back in to the old behaviour with <code>publish-prereleases = true</code>.</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/401" rel="noopener noreferrer">impl</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#publish-prereleases" rel="noopener noreferrer">docs</a></li>
</ul>
<h3>generate command</h3>
<p>This feature is a bit of an internal affair that you don't necessarily need to care about, but it's big enough that we figured it's worth mentioning.</p>
<p>The "plumbing" <code>generate-ci</code> command which is invoked by <code>cargo dist init</code> has been reworked into a more general <code>generate</code> command, as the introduction of msi installers means we now have two kinds of checked-in generated output.</p>
<p>Most notably, <code>generate --check</code> now exists, which produces an error if <code>generate</code> would change the contents (ignoring newline-style). <strong>Most cargo-dist commands now run <code>generate --check</code> on startup, making it an error to have your release.yml out of date or hand-edited</strong>. This is a key piece to the puzzle of the new CI design, as it lets you catch issues with your release process in PRs.</p>
<p>The <code>allow-dirty = ["ci"]</code> config was introduced to disable these <code>generate</code> modifying or checking release.yml, for users that still really need to hand-edit. We're actively working on several features that should make it less necessary to do hand-edits.</p>
<ul>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/381" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/391" rel="noopener noreferrer">generalize for msi</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/397" rel="noopener noreferrer">improved --allow-dirty behaviour</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/410" rel="noopener noreferrer">default to --artifacts=all in generate</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/414" rel="noopener noreferrer">ignore newline style when checking file equality</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/434" rel="noopener noreferrer">hide generate-ci alias command</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/444" rel="noopener noreferrer">cleanup more references to generate-ci</a></li>
</ul>
</li>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/cli.html#cargo-dist-generate" rel="noopener noreferrer">generate cli command</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#allow-dirty" rel="noopener noreferrer">allow-dirty config</a></li>
</ul>
</li>
</ul>
<h3>msi installer</h3>
<p>Initial msi installer support is here, based on the wonderful <a href="https://volks73.github.io/cargo-wix/cargo_wix/" rel="noopener noreferrer">cargo-wix</a>. We contributed several upstream improvements to cargo-wix for our purposes, and look forward to helping out even more in the future!</p>
<ul>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/370" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/421" rel="noopener noreferrer">properly handle multiple subscribers to a binary</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/418" rel="noopener noreferrer">don't forward WiX output to stdout</a></li>
</ul>
</li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/installers/msi.html" rel="noopener noreferrer">docs</a></li>
</ul>
<h2>Fixes</h2>
<h3>more useful checksum files</h3>
<p>The checksum files we generate are now in the expected format for tools like sha256sum, making them more immediately useful.</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/420" rel="noopener noreferrer">impl</a></li>
</ul>
<h2>Maintenance</h2>
<h3>more polished cli output</h3>
<p>CLI Output has been streamlined and cleaned up a lot in this release!</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/411" rel="noopener noreferrer">remove redundant output</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/437" rel="noopener noreferrer">various improvements</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/447" rel="noopener noreferrer">better help diagnostics</a></li>
</ul>
<h3>refreshed docs</h3>
<p>The docs have been significantly reworked to reflect how much cargo-dist has changed and improved over the last few releases. Installers have rapidly grown from "something we're trying out" to "the star of the show", so they're now front-and-center with room for their own guides.</p>
<p>This was a big undertaking, and not everything has been reworked yet. Further improvements will be done more incrementally.</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/451" rel="noopener noreferrer">big docs overhaul</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/404" rel="noopener noreferrer">don't suggest --profile in install instructions</a></li>
<li>@tshepang <a href="https://github.com/axodotdev/cargo-dist/pull/386" rel="noopener noreferrer">make search more useful</a></li>
<li>@tshepang <a href="https://github.com/axodotdev/cargo-dist/pull/388" rel="noopener noreferrer">remove stray char</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.3.0-prerelease.3</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.3.0-prerelease.3</link><category domain="https://github.com/axodotdev/cargo-dist">cargo-dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.3.0-prerelease.3</guid><content:encoded><![CDATA[<p>This release is a big overhaul of cargo-dist's UX! <a href="https://opensource.axo.dev/cargo-dist/book/introduction.html#distributing" rel="noopener noreferrer">Our CI scripts have been completely redesigned</a> to allow your release process to be tested in pull-requests, so you don't have to worry as much about your release process breaking!</p>
<p>Since we can now test your release process frequently, we've also made most cargo-dist commands default to erroring out if anything is out of sync and needs to be regenerated.</p>
<p>To make this easier, we've also introduced an experimental new system for <a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html#custom-jobs" rel="noopener noreferrer">user-defined hooks</a>, allowing you to write custom publish jobs without having to actually edit release.yml.</p>
<p>This release also introduces initial support for msi installers with the wonderful help of <a href="https://github.com/volks73/cargo-wix" rel="noopener noreferrer">cargo-wix</a>!</p>
<h2>Features</h2>
<h3>CI redesign</h3>
<p>This is the big ticket item of the release, the CI has been completely redesigned! We recommend reading the docs below for details, but some high-level details:</p>
<ul>
<li>
<p>The CI now runs <code>cargo dist plan</code> on pull-requests</p>
</li>
<li>
<p>This can be cranked up to <code>cargo dist build</code>, with results uploaded to the PR workflow, allowing you to download+test them</p>
</li>
<li>
<p>To do this, we now use GitHub's upload-artifact/download-artifact system, instead of using a draft GitHub release as scratch storage</p>
</li>
<li>
<p>This means we also no longer create a draft Release on startup, and instead transactionally create the full Release at the very end</p>
</li>
<li>
<p><code>cargo dist plan</code> will now check that the CI script is up to date and not hand-edited (can be opted out)</p>
<ul>
<li>The user-defined publish jobs feature helps you avoid hand-edits</li>
<li>More such features are in the pipeline for the next release!</li>
</ul>
</li>
<li>
<p>impl</p>
<ul>
<li>@mistydemeo + @gankra <a href="https://github.com/axodotdev/cargo-dist/pull/378" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/392" rel="noopener noreferrer">cleanup init logic</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/442" rel="noopener noreferrer">use checkout@v4</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/443" rel="noopener noreferrer">add docs</a></li>
</ul>
</li>
<li>
<p>docs</p>
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/introduction.html#distributing" rel="noopener noreferrer">high-level summary</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html" rel="noopener noreferrer">detailed docs</a></li>
</ul>
</li>
</ul>
<h3>user-defined publish jobs</h3>
<p>You can now define custom hand-written publish jobs that cargo-dist's CI will know how to invoke, without actually having to hand-edit release.yml!</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/417" rel="noopener noreferrer">impl</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/ci/github.html#custom-jobs" rel="noopener noreferrer">docs</a></li>
</ul>
<h3>default to not publishing prereleases to homebrew</h3>
<p>Homebrew doesn't have a notion of package "versions", there is Only The Latest Version, so we changed the default to only publishing to your homebrew tap if you're cutting a stable release. You can opt back in to the old behaviour with <code>publish-prereleases = true</code>.</p>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/401" rel="noopener noreferrer">impl</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#publish-prereleases" rel="noopener noreferrer">docs</a></li>
</ul>
<h3>generate command</h3>
<p>This feature is a bit of an internal affair that you don't necessarily need to care about, but it's big enough that we figured it's worth mentioning.</p>
<p>The "plumbing" <code>generate-ci</code> command which is invoked by <code>cargo dist init</code> has been reworked into a more general <code>generate</code> command, as the introduction of msi installers means we now have two kinds of checked-in generated output.</p>
<p>Most notably, <code>generate --check</code> now exists, which produces an error if <code>generate</code> would change the contents (ignoring newline-style). <strong>Most cargo-dist commands now run <code>generate --check</code> on startup, making it an error to have your release.yml out of date or hand-edited</strong>. This is a key piece to the puzzle of the new CI design, as it lets you catch issues with your release process in PRs.</p>
<p>The <code>allow-dirty = ["ci"]</code> config was introduced to disable these <code>generate</code> modifying or checking release.yml, for users that still really need to hand-edit. We're actively working on several features that should make it less necessary to do hand-edits.</p>
<ul>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/381" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/391" rel="noopener noreferrer">generalize for msi</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/397" rel="noopener noreferrer">improved --allow-dirty behaviour</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/410" rel="noopener noreferrer">default to --artifacts=all in generate</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/414" rel="noopener noreferrer">ignore newline style when checking file equality</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/434" rel="noopener noreferrer">hide generate-ci alias command</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/444" rel="noopener noreferrer">cleanup more references to generate-ci</a></li>
</ul>
</li>
<li>docs
<ul>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/cli.html#cargo-dist-generate" rel="noopener noreferrer">generate cli command</a></li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#allow-dirty" rel="noopener noreferrer">allow-dirty config</a></li>
</ul>
</li>
</ul>
<h3>msi installer</h3>
<p>Initial msi installer support is here, based on the wonderful <a href="https://volks73.github.io/cargo-wix/cargo_wix/" rel="noopener noreferrer">cargo-wix</a>. We contributed several upstream improvements to cargo-wix for our purposes, and look forward to helping out even more in the future!</p>
<ul>
<li>impl
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/370" rel="noopener noreferrer">initial impl</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/421" rel="noopener noreferrer">properly handle multiple subscribers to a binary</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/418" rel="noopener noreferrer">don't forward WiX output to stdout</a></li>
</ul>
</li>
<li><a href="https://opensource.axo.dev/cargo-dist/book/installers/msi.html" rel="noopener noreferrer">docs</a></li>
</ul>
<h2>Fixes</h2>
<h3>more useful checksum files</h3>
<p>The checksum files we generate are now in the expected format for tools like sha256sum, making them more immediately useful.</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/420" rel="noopener noreferrer">impl</a></li>
</ul>
<h2>Maintenance</h2>
<h3>more polished cli output</h3>
<p>CLI Output has been streamlined and cleaned up a lot in this release!</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/411" rel="noopener noreferrer">remove redundant output</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/437" rel="noopener noreferrer">various improvements</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/447" rel="noopener noreferrer">better help diagnostics</a></li>
</ul>
<h3>refreshed docs</h3>
<p>The docs have been significantly reworked to reflect how much cargo-dist has changed and improved over the last few releases. Installers have rapidly grown from "something we're trying out" to "the star of the show", so they're now front-and-center with room for their own guides.</p>
<p>This was a big undertaking, and not everything has been reworked yet. Further improvements will be done more incrementally.</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/451" rel="noopener noreferrer">big docs overhaul</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/404" rel="noopener noreferrer">don't suggest --profile in install instructions</a></li>
<li>@tshepang <a href="https://github.com/axodotdev/cargo-dist/pull/386" rel="noopener noreferrer">make search more useful</a></li>
<li>@tshepang <a href="https://github.com/axodotdev/cargo-dist/pull/388" rel="noopener noreferrer">remove stray char</a></li>
</ul>
]]></content:encoded></item></channel></rss>